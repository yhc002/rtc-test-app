{"version":3,"sources":["components/popups/TextInputPopup.js","MuiTheme.js","components/HomeUI.js","modules/rtc.js","lib/constraints.js","containers/HomeForm.js","pages/Home.js","components/TestUI.js","containers/TestForm.js","pages/Test.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["TextfieldPopup","open","message","label","setText","value","submit","Dialog","DialogContent","DialogContentText","type","onChange","e","val","Number","target","inputProps","min","max","DialogActions","Button","onClick","color","useStyles","createMuiTheme","overrides","MuiGrid","container","height","palette","primary","main","secondary","makeStyles","roundButton","borderRadius","width","HomeUI","connections","setConnections","setResolution","setRoom","audio","video","room","toggleAudio","toggleVideo","initCall","localStream","isOpen","setIsOpen","classes","Fragment","Grid","id","spacing","item","ref","autoPlay","variant","className","Mic","MicOff","Videocam","VideocamOff","awaitControls","direction","alignItems","TextField","disabled","SET_SETTINGS","setSettings","createAction","settings","rtc","handleActions","state","setting","payload","resolution","exact","videoConstraints","withRouter","history","useSelector","dispatch","useDispatch","useRef","useState","useEffect","getMedia","res","a","current","srcObject","console","log","getTracks","forEach","track","stop","navigator","mediaDevices","getUserMedia","then","stream","getVideoTracks","getSettings","controls","document","getElementById","style","getAudioTracks","enabled","isHost","push","idx","Home","React","Component","TestUI","toggleView","hangup","localStreamRef","openStats","statsIsOpen","closeStats","statMessages","isSender","setIsSender","People","Array","from","length","_","i","justify","CallEnd","Layers","location","RTCObjects","socket","setSocket","remoteRefs","areaWidth","setAreaWidth","areaHeight","setAreaHeight","view","setView","setStatsIsOpen","setStatMessages","statInterval","setStatInterval","resizeWindow","window","addEventListener","init","io","removeEventListener","resizeVideos","configSocket","area","offsetWidth","offsetHeight","vid","vidContainer","display","position","left","right","top","Math","ceil","sqrt","emit","on","data","signalData","setRemoteDescription","candidate","addIceCandidate","acceptCall","closeRTC","once","enter","alert","disconnect","error","RTCPeerConnection","config","iceServers","urls","credential","username","onicecandidate","event","iceCallbackLocal","addTrack","createOffer","offerToReceiveAudio","offerToReceiveVideo","onCreateOffer","onCreateSessionDescriptionError","ontrack","gotRemoteStream","remoteSignal","iceCallbackRemote","createAnswer","onCreateAnswer","toString","desc","setLocalDescription","streams","close","shouldLeave","adjustConnection","remoteStreamRefs","clearInterval","interval","setInterval","messages","pcLocal","getStats","results","err","localStat","pcRemote","remoteStat","Test","App","basename","process","hashType","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","appReducer","combineReducers","rootReducer","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.457f06f8.chunk.js","sourcesContent":["import Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button'\r\nimport Textfield from '@material-ui/core/Textfield';\r\n\r\nexport default function TextfieldPopup({ open, message, label, setText, value, submit }) {\r\n    const handleInput = (e) => {\r\n        let val = Number(e.target.value);\r\n        if(val>100) {\r\n            val=100;\r\n        }\r\n        if(val<1) {\r\n            val=1;\r\n        }\r\n        setText(val);\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n        >\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {message}\r\n                </DialogContentText>\r\n                <Textfield\r\n                    label={label}\r\n                    type=\"number\"\r\n                    onChange={handleInput}\r\n                    inputProps={{min:1,max:100}}\r\n                    value={value}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={submit} color=\"primary\">\r\n                    입력\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import { createMuiTheme } from '@material-ui/core/styles'\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst themePalete = createMuiTheme({\r\n  overrides: {\r\n    MuiGrid: {\r\n      container: {\r\n        height: \"100%\"\r\n      }\r\n    }\r\n  },\r\n  palette: {\r\n    primary: { main: \"#38BF87\" },\r\n    secondary: { main: \"#ff1a1a\" },\r\n  }\r\n})\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    roundButton: {\r\n        borderRadius: \"50%\",\r\n        width: \"60px\",\r\n        height: \"60px\",\r\n    }\r\n}));\r\n\r\nexport default themePalete;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Videocam, VideocamOff, Mic, MicOff } from '@material-ui/icons';\r\nimport TextInputPopup from './popups/TextInputPopup';\r\nimport { useStyles } from '../MuiTheme';\r\n\r\nconst HomeUI = ({\r\n    connections, setConnections, setResolution, setRoom, audio, video, room, toggleAudio, toggleVideo, initCall, localStream, isOpen, setIsOpen \r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <main>\r\n                <Grid container id=\"await-main\" spacing={10}>\r\n                    <Grid item>\r\n                        <div id=\"await-video-container\">\r\n                            <video id=\"await-video\" ref={localStream} autoPlay/>\r\n                            <div id='await-video-controls'>\r\n                                <Button variant=\"contained\" className={classes.roundButton} onClick={toggleAudio}>\r\n                                    { audio ? <Mic /> : <MicOff /> }\r\n                                </Button>\r\n                                <Button variant=\"contained\" className={classes.roundButton} onClick={toggleVideo}>\r\n                                    { video? <Videocam /> : <VideocamOff /> }\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item className={classes.awaitControls}>\r\n                        <Grid container direction=\"column\" spacing={1} alignItems=\"center\">\r\n                            <Grid item>\r\n                                <div id=\"await-resoultion-controls\">\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(0)}>qvga</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(1)}>vga</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(2)}>HD</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(3)}>fullHD</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(4)}>TV4k</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(5)}>cinema4K</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(5)}>8K</Button>\r\n                                </div> \r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button onClick={()=>setIsOpen(true)}>Connections: {connections}</Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField label=\"채팅방 id\" value={room} onChange={(e)=>setRoom(e.target.value)}/>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container spacing={1}>\r\n                                    <Grid item>\r\n                                        <Button disabled={!room} variant=\"contained\" onClick={()=>setIsOpen(true)}>\r\n                                            신규 방 생성\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button disabled={!room} variant=\"contained\" onClick={()=>initCall(false)}>\r\n                                            기존 방 입장\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </main>\r\n            <TextInputPopup\r\n                open={isOpen}\r\n                message=\"Peer 수 입력\"\r\n                label=\"peer\"\r\n                setText={setConnections}\r\n                value={connections}\r\n                submit={()=>{setIsOpen(false); initCall(true)}}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default HomeUI;","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst SET_SETTINGS = \"rtc/SET_SETTINGS\";\r\n\r\nconst initialState = {\r\n    setting: {\r\n        connections: 1,\r\n        audio: true,\r\n        video: true,\r\n        resolution: {width: {exact: 320}, height: {exact: 240}},\r\n        room: '',\r\n    },\r\n}\r\n\r\nexport const setSettings = createAction(SET_SETTINGS, settings => settings);\r\n\r\nconst rtc = handleActions(\r\n    {\r\n        [SET_SETTINGS]: (state, { payload: setting })=>({\r\n            ...state,\r\n            setting,\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default rtc;","const qvgaConstraints = { width: {exact: 320}, height: {exact: 240} };\r\n\r\nconst vgaConstraints = { width: {exact: 640}, height: {exact: 480} };\r\n\r\nconst hdConstraints =  { width: {exact: 1280}, height: {exact: 720} };\r\n\r\nconst fullHdConstraints = { width: {exact: 1920}, height: {exact: 1080} };\r\n\r\nconst televisionFourKConstraints = { width: {exact: 3840}, height: {exact: 2160} };\r\n\r\nconst cinemaFourKConstraints = { width: {exact: 4096}, height: {exact: 2160} };\r\n\r\nconst eightKConstraints = { width: {exact: 7680}, height: {exact: 4320} };\r\n\r\nexport const videoConstraints = [qvgaConstraints, vgaConstraints, hdConstraints, fullHdConstraints, televisionFourKConstraints, cinemaFourKConstraints, eightKConstraints]\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Home from '../components/HomeUI'\r\nimport { setSettings } from '../modules/rtc';\r\nimport {videoConstraints } from '../lib/constraints';\r\n\r\nconst HomeForm = ({ history }) => {\r\n    const { connections, audio, video, resolution, room } = useSelector(({ rtc }) => ({\r\n        connections: rtc.setting.connections,\r\n        audio: rtc.setting.audio,\r\n        video: rtc.setting.video,\r\n        resolution: rtc.setting.resolution,\r\n        room: rtc.setting.room,\r\n    }));\r\n    const dispatch = useDispatch();\r\n\r\n    const localStream=useRef();\r\n    const [isOpen,setIsOpen] = useState(false);\r\n\r\n    useEffect(()=>{getMedia(resolution)},[]);\r\n\r\n    const getMedia = async (res) => {\r\n        try {\r\n            if(localStream.current.srcObject) {\r\n                console.log(\"stop track\")\r\n                localStream.current.srcObject.getTracks().forEach(track => {\r\n                    track.stop();\r\n                });\r\n            }\r\n\r\n            await navigator.mediaDevices.getUserMedia({ audio: true, video: res }).then(stream => {\r\n                localStream.current.srcObject = stream;\r\n                const track = stream.getVideoTracks()[0]\r\n                const settings = track.getSettings();\r\n                const controls = document.getElementById('await-video-container');\r\n                controls.style.width = `${settings.width}px`;\r\n                controls.style.height = `${settings.height}px`;\r\n            });\r\n        } catch (e) {\r\n            console.log(\"getUserMedia error\",e)\r\n        }\r\n    }\r\n\r\n\r\n    const initCall = (isHost) => {\r\n        if(localStream.current.srcObject) {\r\n            console.log(\"stop track\")\r\n            localStream.current.srcObject.getTracks().forEach(track => {\r\n                track.stop();\r\n            });\r\n            dispatch(setSettings({ connections, video, audio, resolution, room }));\r\n            localStream.current=null;\r\n        }\r\n        history.push('./test',{isHost});\r\n    }\r\n\r\n    const toggleAudio = () => {\r\n        localStream.current.srcObject.getAudioTracks()[0].enabled = !audio;\r\n        dispatch(setSettings({ connections, video, audio: !audio, resolution, room }));\r\n    }\r\n\r\n    const toggleVideo = () => {\r\n        localStream.current.srcObject.getVideoTracks()[0].enabled = !video;\r\n        dispatch(setSettings({ connections, audio, video: !video, resolution, room }));\r\n    }\r\n\r\n    const setResolution = (idx) => {\r\n        dispatch(setSettings({ connections, audio: true, video: true, resolution: videoConstraints[idx], room }));\r\n        getMedia(videoConstraints[idx]);\r\n    }\r\n\r\n    return (\r\n        <Home\r\n            audio={audio}\r\n            video={video}\r\n            room={room}\r\n            toggleAudio={toggleAudio}\r\n            toggleVideo={toggleVideo}\r\n            initCall={initCall}\r\n            connections={connections}\r\n            setConnections={(val)=>dispatch(setSettings({ connections: val, audio, video, resolution, room }))}\r\n            setResolution={setResolution}\r\n            setRoom={(val)=>dispatch(setSettings({ connections, audio, video, resolution, room: val }))}\r\n            localStream={localStream}\r\n            history={history} \r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(HomeForm);","import React from 'react';\r\nimport HomeForm from '../containers/HomeForm';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <HomeForm />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Videocam, VideocamOff, Mic, MicOff, CallEnd, Layers, People } from \"@material-ui/icons\";\r\nimport { useStyles } from '../MuiTheme';\r\nimport StatsPopup from './popups/StatsPopup'; \r\n\r\nconst TestUI = ({\r\n    audio, video, setConnections, toggleAudio, toggleVideo, toggleView, hangup, connections, localStreamRef, statsIsOpen, openStats, closeStats, statMessages, isSender, setIsSender,\r\n}) => {\r\n    const classes = useStyles();\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <div id='my-area'>\r\n                <People />\r\n                <p> {connections}</p>\r\n                <Button onClick={()=>setConnections(connections+1)}>+</Button>\r\n                <Button onClick={()=>setConnections(connections-1)}>-</Button>\r\n                <video id=\"my-video\" ref={localStreamRef} autoPlay={true}  />\r\n            </div>\r\n            <main>\r\n                <div id=\"call-main\">\r\n                    <div id=\"call-videos\">\r\n                        {\r\n                            Array.from({ length:connections },(_,i) => \r\n                                <div key={i} className=\"remote-container\" id={`remote-container ${i}`}>\r\n                                    <video className=\"remote-video\" id={`remote-video ${i}`} onClick={()=>openStats(i)} autoPlay/>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div> \r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item/>\r\n                        <Grid item>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" className={classes.roundButton} onClick={toggleAudio}>\r\n                                        { audio ? <Mic /> : <MicOff /> }\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" className={classes.roundButton} onClick={toggleVideo}>\r\n                                        { video? <Videocam /> : <VideocamOff /> }\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" className={classes.roundButton} onClick={hangup}>\r\n                                        <CallEnd />\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" className={classes.roundButton} onClick={toggleView}>\r\n                                <Layers />\r\n                            </Button>\r\n                        </Grid>  \r\n                    </Grid>\r\n                </div>\r\n            </main>\r\n            {/* <StatsPopup\r\n                open={statsIsOpen}\r\n                messages={statMessages}\r\n                confirm={closeStats}\r\n                isSender={isSender}\r\n                setIsSender={setIsSender}\r\n            /> */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TestUI;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport io from \"socket.io-client\";\r\nimport Test from '../components/TestUI'\r\nimport { setSettings } from '../modules/rtc';\r\n\r\nconst TestForm = ({ history }) => {\r\n    const { connections, audio, video, resolution, room } = useSelector(({ rtc }) => ({\r\n        connections: rtc.setting.connections,\r\n        audio: rtc.setting.audio,\r\n        video: rtc.setting.video,\r\n        resolution: rtc.setting.resolution,\r\n        room: rtc.setting.room,\r\n    }));\r\n\r\n    const isHost = history.location.state && history.location.state.isHost;\r\n    const dispatch = useDispatch();\r\n\r\n    const localStream=useRef();\r\n    const RTCObjects =useRef(Array.from({ length: 100 },() => null));\r\n\r\n    const [socket, setSocket] = useState(null);\r\n\r\n    const remoteRefs = useRef(Array.from({ length: 100 },() => null))\r\n\r\n    const [areaWidth, setAreaWidth] = useState(0);\r\n    const [areaHeight, setAreaHeight] = useState(0);\r\n    const [view,setView] = useState('sidebar')\r\n\r\n    const [statsIsOpen, setStatsIsOpen] = useState(false);\r\n    const [statMessages, setStatMessages] = useState([[],[]]);\r\n    const [statInterval, setStatInterval] = useState(null);\r\n    const [isSender, setIsSender] = useState(\"sender\");\r\n\r\n    useEffect(() => {\r\n        resizeWindow();\r\n        window.addEventListener('resize', resizeWindow);\r\n        init();\r\n        setSocket(io(\"https://rtc-test-app.herokuapp.com/\"));\r\n        return () => { // cleanup\r\n            window.removeEventListener('resize', resizeWindow);\r\n        }\r\n      }, []);\r\n\r\n    useEffect(() => {\r\n        resizeVideos();\r\n    },[connections]);\r\n\r\n    //initiate after socket is set\r\n    useEffect(() => {\r\n        if(socket)\r\n        {\r\n            configSocket(room)\r\n        }\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        resizeVideos();\r\n    },[view, areaHeight, areaWidth])\r\n\r\n    const resizeWindow = () => {\r\n        const area = document.getElementById('call-videos');\r\n        setAreaWidth(area.offsetWidth);\r\n        setAreaHeight(area.offsetHeight);\r\n    }\r\n\r\n    const resizeVideos = () => {\r\n        let vid;\r\n        let vidContainer;\r\n        for(let idx=0;idx<connections;idx++) {\r\n            vid = document.getElementById(`remote-video ${idx}`);\r\n            vidContainer = document.getElementById(`remote-container ${idx}`)\r\n            if(areaWidth>areaHeight) {\r\n                vid.style.width=\"100%\";\r\n                vid.style.height=\"auto\";\r\n            } else {\r\n                vid.style.width=\"auto\";\r\n                vid.style.height=\"100%\";\r\n            }\r\n            if(view===\"sidebar\") {\r\n                vidContainer.style.display=\"block\";\r\n                vidContainer.style.position=\"absolute\";\r\n                if(idx===0){\r\n                    vidContainer.style.left=0;\r\n                    vidContainer.style.width=`${areaWidth-220}px`; \r\n                    vidContainer.style.height=\"100%\";\r\n                } else if(idx>5){\r\n                    vidContainer.style.display=\"none\";\r\n                } else {\r\n                    vidContainer.style.right=0;\r\n                    vidContainer.style.width=\"218px\";\r\n                    vidContainer.style.height=\"123px\";\r\n                    vidContainer.style.top=`${123*Math.min(idx-1,6)+64}px`\r\n                }\r\n            } else {\r\n                vidContainer.style.display=\"block\";\r\n                vidContainer.style.top=\"auto\";\r\n                vidContainer.style.left=\"auto\";\r\n                vidContainer.style.right=\"auto\";\r\n                if(idx>49){\r\n                    vidContainer.style.display=\"none\";\r\n                }\r\n                vidContainer.style.position=\"relative\";\r\n                vidContainer.style.width=`${areaWidth/Math.ceil(Math.sqrt(Math.min(connections,49)))}px`;\r\n                vidContainer.style.height=`${areaHeight/Math.ceil(Math.sqrt(Math.min(connections,49)))}px`\r\n            }\r\n        }\r\n    }\r\n\r\n    const init = async () => {\r\n        try {\r\n            await navigator.mediaDevices.getUserMedia({ audio: audio || true, video: video ? resolution : true }).then(stream => {\r\n                localStream.current.srcObject = stream;\r\n            });\r\n            localStream.current.srcObject.getAudioTracks()[0].enabled = audio;\r\n            localStream.current.srcObject.getVideoTracks()[0].enabled = video;\r\n        } catch (e) {\r\n            console.log(\"getUserMedia error\",e)\r\n        }\r\n    }\r\n\r\n    //attempt to create/enter room\r\n    const configSocket = (room) => {\r\n        try{\r\n            //emit message requesting to enter/create room\r\n            socket.emit(\"enterRoom\", room, isHost);\r\n            //procedure to handle situation where an opponent entered the room\r\n            socket.on(\"joined\",()=>{\r\n                socket.emit(\"connections-adjusted\", room, connections);\r\n                for(let i=0; i<connections; i++) {\r\n                    initCall(i);\r\n                }\r\n                //handle answer message\r\n                socket.on(\"signal-to-caller\", data => {\r\n                    if(data.signalData.type === \"answer\") {\r\n                        RTCObjects.current[data.idx].setRemoteDescription(data.signalData);\r\n                        console.log(\"caller received answer\", data)\r\n                    } else if (data.signalData.candidate) {\r\n                        RTCObjects.current[data.idx].addIceCandidate(data.signalData);\r\n                        console.log(\"caller received candidate\", data)\r\n                    } \r\n                });\r\n            });\r\n            //handle offer received\r\n            socket.on(\"offer-to-callee\", (data) => {\r\n                console.log(\"callee received offer\", data)\r\n                acceptCall(data.signalData, data.idx);\r\n                //handle candidate messages\r\n            });\r\n            socket.on(\"adjust-connections\",(connections)=>dispatch(setSettings({ connections, audio, video, resolution, room })));\r\n            socket.on(\"candidate-to-callee\", (data) => {\r\n                console.log(\"callee received candidate\", data)\r\n                RTCObjects.current[data.idx].addIceCandidate(data.signalData);\r\n            });\r\n            socket.on(\"close\",i => closeRTC(i));\r\n            //handle ending phone call\r\n            socket.on(\"end\",()=>{\r\n                hangup(false);\r\n            });\r\n            socket.once(\"joinResult\",(enter, message)=>{\r\n                if(!enter){\r\n                    alert(message);\r\n                    if(localStream.current && localStream.current.srcObject) {\r\n                        localStream.current.srcObject.getTracks().forEach(track => {\r\n                            track.stop();\r\n                        });\r\n                        localStream.current=null;\r\n                    }\r\n                    socket.disconnect();\r\n                    dispatch(setSettings({ connections, audio: true, video: true, resolution, room: '' }));\r\n                    history.push('/')\r\n                }\r\n            });\r\n        } catch(error){\r\n            console.log(\"room enter error\", error);\r\n        }\r\n    }\r\n\r\n    const initCall = async (i) => {\r\n        RTCObjects.current[i] = new RTCPeerConnection({\r\n            config: {\r\n                iceServers: [{urls: ['turn:10.186.117.86:3478?transport=udp'], credential: '1234', username: 'test'}],\r\n            },\r\n        });\r\n        RTCObjects.current[i].onicecandidate = (event)=>iceCallbackLocal(event, i);\r\n        if(localStream.current && localStream.current.srcObject) {\r\n            localStream.current.srcObject.getTracks().forEach(track => RTCObjects.current[i].addTrack(track, localStream.current.srcObject));\r\n        }\r\n        RTCObjects.current[i]\r\n            .createOffer({ offerToReceiveAudio: 1, offerToReceiveVideo: 1 })\r\n            .then((event)=>onCreateOffer(event,i), onCreateSessionDescriptionError);\r\n\r\n        RTCObjects.current[i].ontrack = (event)=>gotRemoteStream(event, i);\r\n    }\r\n\r\n    const acceptCall = async (remoteSignal, i) => {\r\n        RTCObjects.current[i] = new RTCPeerConnection({\r\n            config: {\r\n                iceServers: [{urls: ['turn:10.186.117.86:3478?transport=udp'], credential: '1234', username: 'test'}],\r\n            },\r\n        });\r\n        RTCObjects.current[i].onicecandidate = (event)=>iceCallbackRemote(event, i);\r\n        if(localStream.current && localStream.current.srcObject) {\r\n            localStream.current.srcObject.getTracks().forEach(track => RTCObjects.current[i].addTrack(track, localStream.current.srcObject));\r\n        }\r\n        \r\n        RTCObjects.current[i].setRemoteDescription(remoteSignal);\r\n\r\n        RTCObjects.current[i].createAnswer().then((event)=>onCreateAnswer(event, i), onCreateSessionDescriptionError);\r\n        RTCObjects.current[i].ontrack = (event)=>gotRemoteStream(event, i);\r\n    }\r\n\r\n    function onCreateSessionDescriptionError(error) {\r\n        console.log(`Failed to create session description: ${error.toString()}`);\r\n    }\r\n    \r\n    function onCreateOffer(desc, idx) {\r\n        RTCObjects.current[idx].setLocalDescription(desc);\r\n        socket.emit(\"caller-to-server\", { room, signalData: desc, idx, connections });\r\n        console.log('create offer', desc);\r\n    }\r\n      \r\n    function onCreateAnswer(desc, idx) {\r\n        console.log('create answer');\r\n        RTCObjects.current[idx].setLocalDescription(desc);\r\n        socket.emit(\"callee-to-server\", { room, signalData: desc, idx });\r\n    }\r\n\r\n    function gotRemoteStream(e, idx) {\r\n        if (remoteRefs.current[idx] !== e.streams[0]) {\r\n            remoteRefs.current[idx] = e.streams[0];\r\n            const vid = document.getElementById(`remote-video ${idx}`);\r\n            if(vid) {\r\n                vid.srcObject = remoteRefs.current[idx];\r\n                console.log(`pc${idx}: set remote stream as srcObject`);\r\n            } else {\r\n                console.log(`pc${idx}: set fail remote stream`, vid);\r\n            }\r\n        } else {\r\n            console.log(`pc${idx}: failed to receive remote stream`)\r\n        }\r\n    }\r\n\r\n    function iceCallbackLocal(event, idx) {\r\n        socket.emit(\"caller-to-server\", { room, signalData: event.candidate, idx });\r\n    }\r\n      \r\n    function iceCallbackRemote(event, idx) {\r\n        socket.emit(\"callee-to-server\", { room, signalData: event.candidate, idx });\r\n    }\r\n\r\n    const closeRTC = (i) => {\r\n        if(RTCObjects.current[i]) {\r\n            RTCObjects.current[i].close();\r\n            RTCObjects.current[i] = null;\r\n        }\r\n        if(isHost) {\r\n            socket.emit(\"close\",room,i);\r\n        }\r\n    }\r\n\r\n    const hangup = (shouldLeave) => {\r\n        for(let i=0;i<connections;i++) {\r\n            closeRTC(i);\r\n        }\r\n        if(shouldLeave) {\r\n            if(localStream.current && localStream.current.srcObject) {\r\n                localStream.current.srcObject.getTracks().forEach(track => {\r\n                    track.stop();\r\n                });\r\n                localStream.current=null;\r\n            }\r\n            if(socket) {\r\n                console.log(\"should disconnect socket\")\r\n                socket.emit(\"leaveRoom\", room);\r\n            }\r\n            dispatch(setSettings({ connections, audio: true, video: true, resolution, room: '' }));\r\n            history.push('/')\r\n        } \r\n    }\r\n\r\n    const adjustConnection = (val) => {\r\n        socket.emit(\"connections-adjusted\",room,val);\r\n        if(val>connections) {\r\n            for(let i=connections;i<val;i++) {\r\n                initCall(i);\r\n            }\r\n        } else {\r\n            for(let i=val;i<connections;i++) {\r\n                closeRTC(i);\r\n            }\r\n        }\r\n        dispatch(setSettings({ connections: val, audio, video, resolution, room }));\r\n    }\r\n\r\n    const toggleAudio = () => {\r\n        if(localStream.current.srcObject) {\r\n            localStream.current.srcObject.getAudioTracks()[0].enabled = !audio;\r\n            dispatch(setSettings({ connections, video, audio: !audio, resolution, room }));\r\n        }\r\n    }\r\n\r\n    const toggleVideo = () => {\r\n        if(localStream.current.srcObject) {\r\n            localStream.current.srcObject.getVideoTracks()[0].enabled = !video;\r\n            dispatch(setSettings({ connections, audio, video: !video, resolution, room }));\r\n        }\r\n    }\r\n\r\n    const toggleView = () => {\r\n        if(view === \"sidebar\"){\r\n            setView(\"tiles\")\r\n        } else {\r\n            setView(\"sidebar\")\r\n        }\r\n    }\r\n\r\n    const openStats = (idx) => {\r\n        if(statInterval) {\r\n            clearInterval(statInterval);\r\n        }\r\n        const interval = setInterval(async ()=>{\r\n            let messages=['',''];\r\n            if(RTCObjects.current[idx] && RTCObjects.current[idx].pcLocal){\r\n                const localStat = await RTCObjects.current[idx].pcLocal.getStats(null).then(\r\n                    results=>results, err => err.toString()\r\n                )\r\n                messages[0] = localStat;\r\n            }\r\n            if(RTCObjects.current[idx] && RTCObjects.current[idx].pcRemote){\r\n                const remoteStat = await RTCObjects.current[idx].pcRemote.getStats(null).then(\r\n                    results=>results, err => err.toString()\r\n                )\r\n                messages[1] = remoteStat;\r\n            }\r\n            setStatMessages(messages);\r\n        },1000);\r\n        setStatInterval(interval);\r\n        setStatsIsOpen(true);\r\n    }\r\n\r\n    const closeStats = () => {\r\n        clearInterval(statInterval);\r\n        setStatsIsOpen(false);\r\n        setStatInterval(null);\r\n    }\r\n\r\n    return(\r\n        <Test\r\n            audio={audio}\r\n            video={video}\r\n            setConnections={(val)=>adjustConnection(val)}\r\n            toggleAudio={toggleAudio}\r\n            toggleVideo={toggleVideo}\r\n            toggleView={toggleView}\r\n            hangup={()=>hangup(true)}\r\n            connections={connections}\r\n            localStreamRef={localStream}\r\n            remoteStreamRefs={remoteRefs}\r\n            statsIsOpen={statsIsOpen}\r\n            openStats={(idx)=>openStats(idx)}\r\n            closeStats={closeStats}\r\n            statMessages={statMessages}\r\n            isSender={isSender}\r\n            setIsSender={setIsSender}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withRouter(TestForm);","import React from 'react';\r\nimport TestForm from '../containers/TestForm';\r\n\r\nexport default class Test extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <TestForm />\r\n        );\r\n    }\r\n}","import { BrowserRouter, Route} from 'react-router-dom'\r\nimport { Home, Test } from './pages';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\r\n      <Route exact path=\"/\" component={Home}/>\r\n      <Route exact path=\"/test\" component={Test}/>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport rtc from './rtc';\r\n\r\n\r\nconst appReducer = combineReducers({\r\n  rtc,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './modules';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n  rootReducer, composeWithDevTools()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}