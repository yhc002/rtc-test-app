{"version":3,"sources":["components/popups/TextInputPopup.js","MuiTheme.js","components/HomeUI.js","modules/rtc.js","lib/constraints.js","containers/HomeForm.js","pages/Home.js","components/TestUI.js","containers/TestForm.js","pages/Test.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["TextfieldPopup","open","message","label","setText","value","submit","Dialog","DialogContent","DialogContentText","type","onChange","e","val","Number","target","inputProps","min","max","DialogActions","Button","onClick","color","useStyles","createMuiTheme","overrides","MuiGrid","container","height","palette","primary","main","secondary","makeStyles","roundButton","borderRadius","width","HomeUI","connections","setConnections","setResolution","audio","video","toggleAudio","toggleVideo","initCall","localStream","isOpen","foundLocal","setIsOpen","classes","Fragment","Grid","id","spacing","item","ref","autoPlay","variant","className","Mic","MicOff","Videocam","VideocamOff","awaitControls","direction","alignItems","disabled","SET_SETTINGS","setSettings","createAction","settings","rtc","handleActions","state","setting","payload","resolution","exact","videoConstraints","withRouter","history","useSelector","dispatch","useDispatch","useRef","useState","setFoundLocal","useEffect","getMedia","res","a","current","srcObject","console","log","getTracks","forEach","track","stop","navigator","mediaDevices","getUserMedia","then","stream","getVideoTracks","getSettings","controls","document","getElementById","style","getAudioTracks","enabled","push","idx","Home","React","Component","TestUI","toggleView","hangup","localStreamRef","openStats","statsIsOpen","closeStats","statMessages","isSender","setIsSender","People","Array","from","length","_","i","justify","CallEnd","Layers","RTCObjects","socket","setSocket","remoteRefs","areaWidth","setAreaWidth","areaHeight","setAreaHeight","view","setView","setStatsIsOpen","setStatMessages","statInterval","setStatInterval","resizeWindow","window","addEventListener","removeEventListener","init","resizeVideos","configSocket","area","offsetWidth","offsetHeight","vid","vidContainer","display","position","left","right","top","Math","ceil","sqrt","io","room","emit","on","data","acceptCall","signalData","once","result","error","RTCPeerConnection","onicecandidate","event","iceCallbackLocal","addTrack","createOffer","offerToReceiveAudio","offerToReceiveVideo","gotDescriptionLocal","onCreateSessionDescriptionError","ontrack","gotRemoteStream","setRemoteDescription","addIceCandidate","remoteSignal","iceCallbackRemote","createAnswer","gotDescriptionRemote","toString","desc","setLocalDescription","sdp","streams","candidate","shouldLeave","close","remoteStreamRefs","clearInterval","interval","setInterval","messages","pcLocal","getStats","results","err","localStat","pcRemote","remoteStat","Test","App","basename","process","hashType","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","appReducer","combineReducers","rootReducer","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a8d88657.chunk.js","sourcesContent":["import Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button'\r\nimport Textfield from '@material-ui/core/Textfield';\r\n\r\nexport default function TextfieldPopup({ open, message, label, setText, value, submit }) {\r\n    const handleInput = (e) => {\r\n        let val = Number(e.target.value);\r\n        if(val>100) {\r\n            val=100;\r\n        }\r\n        if(val<1) {\r\n            val=1;\r\n        }\r\n        setText(val);\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n        >\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {message}\r\n                </DialogContentText>\r\n                <Textfield\r\n                    label={label}\r\n                    type=\"number\"\r\n                    onChange={handleInput}\r\n                    inputProps={{min:1,max:100}}\r\n                    value={value}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={submit} color=\"primary\">\r\n                    입력\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import { createMuiTheme } from '@material-ui/core/styles'\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst themePalete = createMuiTheme({\r\n  overrides: {\r\n    MuiGrid: {\r\n      container: {\r\n        height: \"100%\"\r\n      }\r\n    }\r\n  },\r\n  palette: {\r\n    primary: { main: \"#38BF87\" },\r\n    secondary: { main: \"#ff1a1a\" },\r\n  }\r\n})\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    roundButton: {\r\n        borderRadius: \"50%\",\r\n        width: \"60px\",\r\n        height: \"60px\",\r\n    }\r\n}));\r\n\r\nexport default themePalete;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Videocam, VideocamOff, Mic, MicOff } from '@material-ui/icons';\r\nimport TextInputPopup from './popups/TextInputPopup';\r\nimport { useStyles } from '../MuiTheme';\r\n\r\nconst HomeUI = ({\r\n    connections, setConnections, setResolution, audio, video, toggleAudio, toggleVideo, initCall, localStream, foundLocal, isOpen, setIsOpen \r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <main>\r\n                <Grid container id=\"await-main\" spacing={10}>\r\n                    <Grid item>\r\n                        <div id=\"await-video-container\">\r\n                            <video id=\"await-video\" ref={localStream} autoPlay/>\r\n                            <div id='await-video-controls'>\r\n                                <Button variant=\"contained\" className={classes.roundButton} onClick={toggleAudio}>\r\n                                    { audio ? <Mic /> : <MicOff /> }\r\n                                </Button>\r\n                                <Button variant=\"contained\" className={classes.roundButton} onClick={toggleVideo}>\r\n                                    { video? <Videocam /> : <VideocamOff /> }\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item className={classes.awaitControls}>\r\n                        <Grid container direction=\"column\" spacing={1} alignItems=\"center\">\r\n                            <Grid item>\r\n                                <div id=\"await-resoultion-controls\">\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(0)}>qvga</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(1)}>vga</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(2)}>HD</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(3)}>fullHD</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(4)}>TV4k</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(5)}>cinema4K</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(5)}>8K</Button>\r\n                                </div> \r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button onClick={()=>setIsOpen(true)}>Connections: {connections}</Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container spacing={1}>\r\n                                    <Grid item>\r\n                                        <Button variant=\"contained\" className={classes.roundButton} onClick={()=>setConnections(connections+1)} disabled={connections>=100}>\r\n                                            +\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button variant=\"contained\" className={classes.roundButton} onClick={()=>setConnections(connections-1)} disabled={connections<=1}>\r\n                                            -\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button variant=\"contained\" onClick={initCall}>\r\n                                    지금 참여하기\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </main>\r\n            <TextInputPopup\r\n                open={isOpen}\r\n                message=\"Peer 수 입력\"\r\n                label=\"peer\"\r\n                setText={setConnections}\r\n                value={connections}\r\n                submit={()=>setIsOpen(false)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default HomeUI;","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst SET_SETTINGS = \"rtc/SET_SETTINGS\";\r\n\r\nconst initialState = {\r\n    setting: {\r\n        connections: 1,\r\n        audio: true,\r\n        video: true,\r\n        resolution: {width: {exact: 320}, height: {exact: 240}}, \r\n    },\r\n}\r\n\r\nexport const setSettings = createAction(SET_SETTINGS, settings => settings);\r\n\r\nconst rtc = handleActions(\r\n    {\r\n        [SET_SETTINGS]: (state, { payload: setting })=>({\r\n            ...state,\r\n            setting,\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default rtc;","const qvgaConstraints = { width: {exact: 320}, height: {exact: 240} };\r\n\r\nconst vgaConstraints = { width: {exact: 640}, height: {exact: 480} };\r\n\r\nconst hdConstraints =  { width: {exact: 1280}, height: {exact: 720} };\r\n\r\nconst fullHdConstraints = { width: {exact: 1920}, height: {exact: 1080} };\r\n\r\nconst televisionFourKConstraints = { width: {exact: 3840}, height: {exact: 2160} };\r\n\r\nconst cinemaFourKConstraints = { width: {exact: 4096}, height: {exact: 2160} };\r\n\r\nconst eightKConstraints = { width: {exact: 7680}, height: {exact: 4320} };\r\n\r\nexport const videoConstraints = [qvgaConstraints, vgaConstraints, hdConstraints, fullHdConstraints, televisionFourKConstraints, cinemaFourKConstraints, eightKConstraints]\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Home from '../components/HomeUI'\r\nimport { setSettings } from '../modules/rtc';\r\nimport {videoConstraints } from '../lib/constraints';\r\n\r\nconst HomeForm = ({ history }) => {\r\n    const { connections, audio, video, resolution } = useSelector(({ rtc }) => ({\r\n        connections: rtc.setting.connections,\r\n        audio: rtc.setting.audio,\r\n        video: rtc.setting.video,\r\n        resolution: rtc.setting.resolution,\r\n    }));\r\n    const dispatch = useDispatch();\r\n\r\n    const localStream=useRef();\r\n    const [foundLocal, setFoundLocal] = useState(false);\r\n    const [isOpen,setIsOpen] = useState(false);\r\n\r\n    useEffect(()=>{getMedia(resolution)},[]);\r\n\r\n    const getMedia = async (res) => {\r\n        try {\r\n            if(localStream.current.srcObject) {\r\n                console.log(\"stop track\")\r\n                localStream.current.srcObject.getTracks().forEach(track => {\r\n                    track.stop();\r\n                });\r\n            }\r\n\r\n            await navigator.mediaDevices.getUserMedia({ audio: true, video: res }).then(stream => {\r\n                localStream.current.srcObject = stream;\r\n                const track = stream.getVideoTracks()[0]\r\n                const settings = track.getSettings();\r\n                const controls = document.getElementById('await-video-container');\r\n                controls.style.width = `${settings.width}px`;\r\n                controls.style.height = `${settings.height}px`;\r\n            });\r\n            setFoundLocal(true);\r\n        } catch (e) {\r\n            console.log(\"getUserMedia error\",e)\r\n            setFoundLocal(false);\r\n        }\r\n    }\r\n\r\n\r\n    const initCall = () => {\r\n        if(localStream.current.srcObject) {\r\n            console.log(\"stop track\")\r\n            localStream.current.srcObject.getTracks().forEach(track => {\r\n                track.stop();\r\n            });\r\n            localStream.current=null;\r\n        }\r\n        history.push('./test');\r\n    }\r\n\r\n    const toggleAudio = () => {\r\n        localStream.current.srcObject.getAudioTracks()[0].enabled = !audio;\r\n        dispatch(setSettings({ connections, video, audio: !audio, resolution }));\r\n    }\r\n\r\n    const toggleVideo = () => {\r\n        localStream.current.srcObject.getVideoTracks()[0].enabled = !video;\r\n        dispatch(setSettings({ connections, audio, video: !video, resolution }));\r\n    }\r\n\r\n    const setResolution = (idx) => {\r\n        dispatch(setSettings({ connections, audio: true, video: true, resolution: videoConstraints[idx] }));\r\n        getMedia(videoConstraints[idx]);\r\n    }\r\n\r\n    return (\r\n        <Home\r\n            audio={audio}\r\n            video={video}\r\n            toggleAudio={toggleAudio}\r\n            toggleVideo={toggleVideo}\r\n            initCall={initCall}\r\n            connections={connections}\r\n            setConnections={(val)=>dispatch(setSettings({ connections: val, audio, video, resolution }))}\r\n            setResolution={setResolution}\r\n            localStream={localStream}\r\n            foundLocal={foundLocal}\r\n            history={history} \r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(HomeForm);","import React from 'react';\r\nimport HomeForm from '../containers/HomeForm';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <HomeForm />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Videocam, VideocamOff, Mic, MicOff, CallEnd, Layers, People } from \"@material-ui/icons\";\r\nimport { useStyles } from '../MuiTheme';\r\nimport StatsPopup from './popups/StatsPopup'; \r\n\r\nconst TestUI = ({\r\n    audio, video, setConnections, toggleAudio, toggleVideo, toggleView, hangup, connections, localStreamRef, statsIsOpen, openStats, closeStats, statMessages, isSender, setIsSender,\r\n}) => {\r\n    const classes = useStyles();\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <div id='my-area'>\r\n                <People />\r\n                <p> {connections}</p>\r\n                <Button onClick={()=>setConnections(connections+1)}>+</Button>\r\n                <Button onClick={()=>setConnections(connections-1)}>-</Button>\r\n                <video id=\"my-video\" ref={localStreamRef} autoPlay={true}  />\r\n            </div>\r\n            <main>\r\n                <div id=\"call-main\">\r\n                    <div id=\"call-videos\">\r\n                        {\r\n                            Array.from({ length:connections },(_,i) => \r\n                                <div key={i} className=\"remote-container\" id={`remote-container ${i}`}>\r\n                                    <video className=\"remote-video\" id={`remote-video ${i}`} onClick={()=>openStats(i)} autoPlay/>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div> \r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item/>\r\n                        <Grid item>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" className={classes.roundButton} onClick={toggleAudio}>\r\n                                        { audio ? <Mic /> : <MicOff /> }\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" className={classes.roundButton} onClick={toggleVideo}>\r\n                                        { video? <Videocam /> : <VideocamOff /> }\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" className={classes.roundButton} onClick={hangup}>\r\n                                        <CallEnd />\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" className={classes.roundButton} onClick={toggleView}>\r\n                                <Layers />\r\n                            </Button>\r\n                        </Grid>  \r\n                    </Grid>\r\n                </div>\r\n            </main>\r\n            {/* <StatsPopup\r\n                open={statsIsOpen}\r\n                messages={statMessages}\r\n                confirm={closeStats}\r\n                isSender={isSender}\r\n                setIsSender={setIsSender}\r\n            /> */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TestUI;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport io from \"socket.io-client\";\r\nimport Test from '../components/TestUI'\r\nimport { setSettings } from '../modules/rtc';\r\n\r\nconst TestForm = ({ history }) => {\r\n    const { connections, audio, video, resolution } = useSelector(({ rtc }) => ({\r\n        connections: rtc.setting.connections,\r\n        audio: rtc.setting.audio,\r\n        video: rtc.setting.video,\r\n        resolution: rtc.setting.resolution,\r\n    }));\r\n    const room=1;\r\n    const dispatch = useDispatch();\r\n\r\n    const localStream=useRef();\r\n    const RTCObjects =useRef(Array.from({ length: 100 },() => null));\r\n\r\n    const [socket, setSocket] = useState(null);\r\n\r\n    const remoteRefs = useRef(Array.from({ length: 100 },() => null))\r\n\r\n    const [areaWidth, setAreaWidth] = useState(0);\r\n    const [areaHeight, setAreaHeight] = useState(0);\r\n    const [view,setView] = useState('sidebar')\r\n\r\n    const [statsIsOpen, setStatsIsOpen] = useState(false);\r\n    const [statMessages, setStatMessages] = useState([[],[]]);\r\n    const [statInterval, setStatInterval] = useState(null);\r\n    const [isSender, setIsSender] = useState(\"sender\");\r\n\r\n    useEffect(() => {\r\n        resizeWindow();\r\n        window.addEventListener('resize', resizeWindow);\r\n        return () => { // cleanup \r\n          window.removeEventListener('resize', resizeWindow);\r\n        }\r\n      }, []);\r\n\r\n    useEffect(() => {\r\n        hangup(false);\r\n        init();\r\n        resizeVideos();\r\n    },[connections]);\r\n\r\n    //initiate after socket is set\r\n    useEffect(() => {\r\n        if(socket)\r\n        {\r\n            configSocket(room)\r\n        }\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        resizeVideos();\r\n    },[view, areaHeight, areaWidth])\r\n\r\n    const resizeWindow = () => {\r\n        const area = document.getElementById('call-videos');\r\n        setAreaWidth(area.offsetWidth);\r\n        setAreaHeight(area.offsetHeight);\r\n    }\r\n\r\n    const resizeVideos = () => {\r\n        let vid;\r\n        let vidContainer;\r\n        for(let idx=0;idx<connections;idx++) {\r\n            vid = document.getElementById(`remote-video ${idx}`);\r\n            vidContainer = document.getElementById(`remote-container ${idx}`)\r\n            if(areaWidth>areaHeight) {\r\n                vid.style.width=\"100%\";\r\n                vid.style.height=\"auto\";\r\n            } else {\r\n                vid.style.width=\"auto\";\r\n                vid.style.height=\"100%\";\r\n            }\r\n            if(view===\"sidebar\") {\r\n                vidContainer.style.display=\"block\";\r\n                vidContainer.style.position=\"absolute\";\r\n                if(idx===0){\r\n                    vidContainer.style.left=0;\r\n                    vidContainer.style.width=`${areaWidth-220}px`; \r\n                    vidContainer.style.height=\"100%\";\r\n                } else if(idx>5){\r\n                    vidContainer.style.display=\"none\";\r\n                } else {\r\n                    vidContainer.style.right=0;\r\n                    vidContainer.style.width=\"218px\";\r\n                    vidContainer.style.height=\"123px\";\r\n                    vidContainer.style.top=`${123*Math.min(idx-1,6)+64}px`\r\n                }\r\n            } else {\r\n                vidContainer.style.display=\"block\";\r\n                vidContainer.style.top=\"auto\";\r\n                vidContainer.style.left=\"auto\";\r\n                vidContainer.style.right=\"auto\";\r\n                if(idx>49){\r\n                    vidContainer.style.display=\"none\";\r\n                }\r\n                vidContainer.style.position=\"relative\";\r\n                vidContainer.style.width=`${areaWidth/Math.ceil(Math.sqrt(Math.min(connections,49)))}px`;\r\n                vidContainer.style.height=`${areaHeight/Math.ceil(Math.sqrt(Math.min(connections,49)))}px`\r\n            }\r\n        }\r\n    }\r\n\r\n    const init = async () => {\r\n        try {\r\n            await navigator.mediaDevices.getUserMedia({ audio: audio || true, video: video ? resolution : true }).then(stream => {\r\n                localStream.current.srcObject = stream;\r\n            });\r\n            localStream.current.srcObject.getAudioTracks()[0].enabled = audio;\r\n            localStream.current.srcObject.getVideoTracks()[0].enabled = video;\r\n            setSocket(io(\"http://192.168.0.3:8000\"));\r\n        } catch (e) {\r\n            console.log(\"getUserMedia error\",e)\r\n        }\r\n    }\r\n\r\n    //attempt to create/enter room\r\n    const configSocket = (room) => {\r\n        try{\r\n            //emit message requesting to enter/create room\r\n            socket.emit(\"enterRoom\", room);\r\n            //procedure to handle situation where an opponent entered the room\r\n            socket.on(\"joined\",()=>{ initCall() });\r\n            //handle offer received\r\n            socket.on(\"offer-to-callee\", (data) => {\r\n                console.log(\"received offer\", data)\r\n                acceptCall(data.signalData, data.idx);\r\n            });\r\n            //handle ending phone call\r\n            // socket.on(\"end\",(message)=>{\r\n            //     setEndMessage(message);\r\n            //     setEndPopup(true);\r\n            // });\r\n            socket.once(\"joinResult\",(result)=>{\r\n                console.log('joinResult',result);\r\n            });\r\n        } catch(error){\r\n            console.log(\"room enter error\", error);\r\n        }\r\n    }\r\n\r\n    const initCall = async () => {\r\n        for(let i=0;i<connections;i++) {\r\n            RTCObjects.current[i] = new RTCPeerConnection(null);\r\n            RTCObjects.current[i].onicecandidate = (event)=>iceCallbackLocal(event, i);\r\n            if(localStream.current && localStream.current.srcObject) {\r\n                localStream.current.srcObject.getTracks().forEach(track => RTCObjects.current[i].addTrack(track, localStream.current.srcObject));\r\n            }\r\n            RTCObjects.current[i]\r\n                .createOffer({ offerToReceiveAudio: 1, offerToReceiveVideo: 1 })\r\n                .then((event)=>gotDescriptionLocal(event,i), onCreateSessionDescriptionError);\r\n\r\n            RTCObjects.current[i].ontrack = (event)=>gotRemoteStream(event, i);\r\n        }\r\n         //handle answer message\r\n         socket.on(\"signal-to-caller\", data => {\r\n            console.log(\"signal-to-caller\", data)\r\n            if(data.signalData.type === \"answer\") {\r\n                RTCObjects.current[data.idx].setRemoteDescription(data.signalData);\r\n            } else if(data.signalData.type === \"candidate\") {\r\n                RTCObjects.current[data.idx].addIceCandidate(data.signalData);\r\n            }\r\n        });\r\n    }\r\n\r\n    const acceptCall = async (remoteSignal, i) => {\r\n        RTCObjects.current[i] = new RTCPeerConnection(null);\r\n        RTCObjects.current[i].ontrack = (event)=>gotRemoteStream(event, i);\r\n        RTCObjects.current[i].onicecandidate = (event)=>iceCallbackRemote(event, i);\r\n        if(localStream.current && localStream.current.srcObject) {\r\n            localStream.current.srcObject.getTracks().forEach(track => RTCObjects.current[i].addTrack(track, localStream.current.srcObject));\r\n        }\r\n        \r\n        RTCObjects.current[i].setRemoteDescription(remoteSignal);\r\n\r\n        RTCObjects.current[i].createAnswer().then((event)=>gotDescriptionRemote(event, i), onCreateSessionDescriptionError);\r\n        //handle candidate messages\r\n        socket.on(\"candidate-to-callee\", (data) => {\r\n            console.log(\"callee received candidate\", data)\r\n            RTCObjects.current[data.idx].addIceCandidate(data.signalData);\r\n        });\r\n    }\r\n\r\n    function onCreateSessionDescriptionError(error) {\r\n        console.log(`Failed to create session description: ${error.toString()}`);\r\n    }\r\n    \r\n    function gotDescriptionLocal(desc, idx) {\r\n        RTCObjects.current[idx].setLocalDescription(desc);\r\n        socket.emit(\"caller-to-server\", { room, signalData: desc, idx });\r\n        console.log(`Offer from pc${idx}Local\\n${desc.sdp}`);\r\n        // RTCObjects.current[idx].pcRemote.setRemoteDescription(desc);\r\n        // RTCObjects.current[idx].pcRemote.createAnswer().then((event)=>gotDescriptionRemote(event, idx), onCreateSessionDescriptionError);\r\n    }\r\n      \r\n    function gotDescriptionRemote(desc, idx) {\r\n        // RTCObjects.current[idx].pcRemote.setLocalDescription(desc);\r\n        // console.log(`Answer from pc${idx}Remote\\n${desc.sdp}`);\r\n        RTCObjects.current[idx].setLocalDescription(desc);\r\n        socket.emit(\"callee-to-server\", { room, signalData: desc, idx });\r\n    }\r\n\r\n    function gotRemoteStream(e, idx) {\r\n        if (remoteRefs.current[idx] !== e.streams[0]) {\r\n            remoteRefs.current[idx] = e.streams[0];\r\n            const vid = document.getElementById(`remote-video ${idx}`);\r\n            if(vid) { vid.srcObject = remoteRefs.current[idx] }\r\n            console.log(`pc${idx}: received remote stream`);\r\n        } else {\r\n            console.log(\"test failed!\")\r\n        }\r\n    }\r\n\r\n    function iceCallbackLocal(event, idx) {\r\n        socket.emit(\"caller-to-server\", { room, signalData: event.candidate, idx });\r\n        // handleCandidate(event.candidate, RTCObjects.current[idx].pcRemote, `pc${idx}: `, 'local');\r\n    }\r\n      \r\n    function iceCallbackRemote(event, idx) {\r\n        socket.emit(\"callee-to-server\", { room, signalData: event.candidate, idx });\r\n        // handleCandidate(event.candidate, RTCObjects.current[idx].pcLocal, `pc${idx}: `, 'remote');\r\n    }\r\n      \r\n    function hangup(shouldLeave) {\r\n        for(let i=0;i<connections;i++) {\r\n            if(RTCObjects.current[i])\r\n                RTCObjects.current[i].close();\r\n            RTCObjects.current[i] = null;\r\n        }\r\n        if(shouldLeave) {\r\n            if(localStream.current.srcObject) {\r\n                localStream.current.srcObject.getTracks().forEach(track => {\r\n                    track.stop();\r\n                });\r\n                localStream.current=null;\r\n            }\r\n            socket.emit(\"leaveRoom\", room);\r\n            setSocket(null);\r\n            dispatch(setSettings({ connections, audio: true, video: true, resolution }));\r\n            history.push('/')\r\n        } \r\n    }\r\n\r\n    const toggleAudio = () => {\r\n        if(localStream.current.srcObject) {\r\n            localStream.current.srcObject.getAudioTracks()[0].enabled = !audio;\r\n            dispatch(setSettings({ connections, video, audio: !audio, resolution }));\r\n        }\r\n    }\r\n\r\n    const toggleVideo = () => {\r\n        if(localStream.current.srcObject) {\r\n            localStream.current.srcObject.getVideoTracks()[0].enabled = !video;\r\n            dispatch(setSettings({ connections, audio, video: !video, resolution }));\r\n        }\r\n    }\r\n\r\n    const toggleView = () => {\r\n        if(view === \"sidebar\"){\r\n            setView(\"tiles\")\r\n        } else {\r\n            setView(\"sidebar\")\r\n        }\r\n    }\r\n\r\n    const openStats = (idx) => {\r\n        if(statInterval) {\r\n            clearInterval(statInterval);\r\n        }\r\n        const interval = setInterval(async ()=>{\r\n            let messages=['',''];\r\n            if(RTCObjects.current[idx] && RTCObjects.current[idx].pcLocal){\r\n                const localStat = await RTCObjects.current[idx].pcLocal.getStats(null).then(\r\n                    results=>results, err => err.toString()\r\n                )\r\n                messages[0] = localStat;\r\n            }\r\n            if(RTCObjects.current[idx] && RTCObjects.current[idx].pcRemote){\r\n                const remoteStat = await RTCObjects.current[idx].pcRemote.getStats(null).then(\r\n                    results=>results, err => err.toString()\r\n                )\r\n                messages[1] = remoteStat;\r\n            }\r\n            setStatMessages(messages);\r\n        },1000);\r\n        setStatInterval(interval);\r\n        setStatsIsOpen(true);\r\n    }\r\n\r\n    const closeStats = () => {\r\n        clearInterval(statInterval);\r\n        setStatsIsOpen(false);\r\n        setStatInterval(null);\r\n    }\r\n\r\n    return(\r\n        <Test\r\n            audio={audio}\r\n            video={video}\r\n            setConnections={(val)=>dispatch(setSettings({ connections: val, audio, video, resolution }))}\r\n            toggleAudio={toggleAudio}\r\n            toggleVideo={toggleVideo}\r\n            toggleView={toggleView}\r\n            hangup={()=>hangup(true)}\r\n            connections={connections}\r\n            localStreamRef={localStream}\r\n            remoteStreamRefs={remoteRefs}\r\n            statsIsOpen={statsIsOpen}\r\n            openStats={(idx)=>openStats(idx)}\r\n            closeStats={closeStats}\r\n            statMessages={statMessages}\r\n            isSender={isSender}\r\n            setIsSender={setIsSender}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withRouter(TestForm);","import React from 'react';\r\nimport TestForm from '../containers/TestForm';\r\n\r\nexport default class Test extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <TestForm />\r\n        );\r\n    }\r\n}","import { BrowserRouter, Route} from 'react-router-dom'\r\nimport { Home, Test } from './pages';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\r\n      <Route exact path=\"/\" component={Home}/>\r\n      <Route exact path=\"/test\" component={Test}/>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport rtc from './rtc';\r\n\r\n\r\nconst appReducer = combineReducers({\r\n  rtc,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './modules';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n  rootReducer, composeWithDevTools()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}