{"version":3,"sources":["components/popups/TextInputPopup.js","MuiTheme.js","components/HomeUI.js","modules/rtc.js","lib/constraints.js","containers/HomeForm.js","pages/Home.js","components/TableUI.js","components/popups/StatsPopup.js","components/TestUI.js","containers/TestForm.js","pages/Test.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["TextfieldPopup","open","message","label","setText","value","submit","Dialog","DialogContent","DialogContentText","type","onChange","e","val","Number","target","inputProps","min","max","DialogActions","Button","onClick","color","useStyles","createMuiTheme","overrides","MuiGrid","container","height","palette","primary","main","secondary","makeStyles","roundButton","borderRadius","width","HomeUI","connections","setConnections","setResolution","audio","video","toggleAudio","toggleVideo","initCall","localStream","foundLocal","isOpen","setIsOpen","classes","Fragment","Grid","id","spacing","item","ref","autoPlay","variant","className","Mic","MicOff","Videocam","VideocamOff","awaitControls","direction","alignItems","disabled","SET_SETTINGS","setSettings","createAction","settings","rtc","handleActions","state","setting","payload","resolution","exact","videoConstraints","withRouter","history","useSelector","dispatch","useDispatch","useRef","useState","setFoundLocal","useEffect","getMedia","res","a","current","srcObject","console","log","getTracks","forEach","track","stop","navigator","mediaDevices","getUserMedia","then","stream","getVideoTracks","getSettings","controls","document","getElementById","style","getAudioTracks","enabled","push","idx","Home","React","Component","TableUI","tableHead","tableData","Table","TableHead","TableRow","map","head","TableCell","TableBody","row","data","StatsPopup","messages","confirm","isSender","setIsSender","ids","report","key","datas","fullWidth","maxWidth","RadioGroup","FormControlLabel","control","Radio","TestUI","toggleView","hangup","localStreamRef","statsIsOpen","openStats","closeStats","statMessages","People","Array","from","length","_","i","justify","CallEnd","Layers","RTCObjects","pcLocal","pcRemote","remoteRefs","areaWidth","setAreaWidth","areaHeight","setAreaHeight","view","setView","setStatsIsOpen","setStatMessages","statInterval","setStatInterval","resizeWindow","window","addEventListener","removeEventListener","init","resizeVideos","area","offsetWidth","offsetHeight","vid","vidContainer","display","position","left","right","top","Math","ceil","sqrt","call","RTCPeerConnection","ontrack","event","gotRemoteStream","onicecandidate","iceCallbackLocal","iceCallbackRemote","addTrack","createOffer","offerToReceiveAudio","offerToReceiveVideo","gotDescriptionLocal","onCreateSessionDescriptionError","error","toString","desc","setLocalDescription","setRemoteDescription","createAnswer","gotDescriptionRemote","streams","handleCandidate","candidate","dest","prefix","addIceCandidate","shouldLeave","close","remoteStreamRefs","clearInterval","interval","setInterval","getStats","results","err","localStat","remoteStat","Test","App","basename","process","hashType","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","appReducer","combineReducers","rootReducer","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ec898dce.chunk.js","sourcesContent":["import Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button'\r\nimport Textfield from '@material-ui/core/Textfield';\r\n\r\nexport default function TextfieldPopup({ open, message, label, setText, value, submit }) {\r\n    const handleInput = (e) => {\r\n        let val = Number(e.target.value);\r\n        if(val>100) {\r\n            val=100;\r\n        }\r\n        if(val<1) {\r\n            val=1;\r\n        }\r\n        setText(val);\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n        >\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {message}\r\n                </DialogContentText>\r\n                <Textfield\r\n                    label={label}\r\n                    type=\"number\"\r\n                    onChange={handleInput}\r\n                    inputProps={{min:1,max:100}}\r\n                    value={value}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={submit} color=\"primary\">\r\n                    입력\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import { createMuiTheme } from '@material-ui/core/styles'\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst themePalete = createMuiTheme({\r\n  overrides: {\r\n    MuiGrid: {\r\n      container: {\r\n        height: \"100%\"\r\n      }\r\n    }\r\n  },\r\n  palette: {\r\n    primary: { main: \"#38BF87\" },\r\n    secondary: { main: \"#ff1a1a\" },\r\n  }\r\n})\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    roundButton: {\r\n        borderRadius: \"50%\",\r\n        width: \"60px\",\r\n        height: \"60px\",\r\n    }\r\n}));\r\n\r\nexport default themePalete;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Videocam, VideocamOff, Mic, MicOff } from '@material-ui/icons';\r\nimport TextInputPopup from './popups/TextInputPopup';\r\nimport { useStyles } from '../MuiTheme';\r\n\r\nconst HomeUI = ({\r\n    connections, setConnections, setResolution, audio, video, toggleAudio, toggleVideo, initCall, localStream, foundLocal, isOpen, setIsOpen \r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <main>\r\n                <Grid container id=\"await-main\" spacing={10}>\r\n                    <Grid item>\r\n                        <div id=\"await-video-container\">\r\n                            <video id=\"await-video\" ref={localStream} autoPlay/>\r\n                            <div id='await-video-controls'>\r\n                                <Button variant=\"contained\" className={classes.roundButton} onClick={toggleAudio}>\r\n                                    { audio ? <Mic /> : <MicOff /> }\r\n                                </Button>\r\n                                <Button variant=\"contained\" className={classes.roundButton} onClick={toggleVideo}>\r\n                                    { video? <Videocam /> : <VideocamOff /> }\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item className={classes.awaitControls}>\r\n                        <Grid container direction=\"column\" spacing={1} alignItems=\"center\">\r\n                            <Grid item>\r\n                                <div id=\"await-resoultion-controls\">\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(0)}>qvga</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(1)}>vga</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(2)}>HD</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(3)}>fullHD</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(4)}>TV4k</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(5)}>cinema4K</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(5)}>8K</Button>\r\n                                </div> \r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button onClick={()=>setIsOpen(true)}>Connections: {connections}</Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container spacing={1}>\r\n                                    <Grid item>\r\n                                        <Button variant=\"contained\" className={classes.roundButton} onClick={()=>setConnections(connections+1)} disabled={connections>=100}>\r\n                                            +\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button variant=\"contained\" className={classes.roundButton} onClick={()=>setConnections(connections-1)} disabled={connections<=1}>\r\n                                            -\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button variant=\"contained\" onClick={initCall} disabled={!foundLocal}>\r\n                                    지금 참여하기\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </main>\r\n            <TextInputPopup\r\n                open={isOpen}\r\n                message=\"Peer 수 입력\"\r\n                label=\"peer\"\r\n                setText={setConnections}\r\n                value={connections}\r\n                submit={()=>setIsOpen(false)}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default HomeUI;","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst SET_SETTINGS = \"rtc/SET_SETTINGS\";\r\n\r\nconst initialState = {\r\n    setting: {\r\n        connections: 1,\r\n        audio: true,\r\n        video: true,\r\n        resolution: {width: {exact: 320}, height: {exact: 240}}, \r\n    },\r\n}\r\n\r\nexport const setSettings = createAction(SET_SETTINGS, settings => settings);\r\n\r\nconst rtc = handleActions(\r\n    {\r\n        [SET_SETTINGS]: (state, { payload: setting })=>({\r\n            ...state,\r\n            setting,\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default rtc;","const qvgaConstraints = { width: {exact: 320}, height: {exact: 240} };\r\n\r\nconst vgaConstraints = { width: {exact: 640}, height: {exact: 480} };\r\n\r\nconst hdConstraints =  { width: {exact: 1280}, height: {exact: 720} };\r\n\r\nconst fullHdConstraints = { width: {exact: 1920}, height: {exact: 1080} };\r\n\r\nconst televisionFourKConstraints = { width: {exact: 3840}, height: {exact: 2160} };\r\n\r\nconst cinemaFourKConstraints = { width: {exact: 4096}, height: {exact: 2160} };\r\n\r\nconst eightKConstraints = { width: {exact: 7680}, height: {exact: 4320} };\r\n\r\nexport const videoConstraints = [qvgaConstraints, vgaConstraints, hdConstraints, fullHdConstraints, televisionFourKConstraints, cinemaFourKConstraints, eightKConstraints]\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Home from '../components/HomeUI'\r\nimport { setSettings } from '../modules/rtc';\r\nimport {videoConstraints } from '../lib/constraints';\r\n\r\nconst HomeForm = ({ history }) => {\r\n    const { connections, audio, video, resolution } = useSelector(({ rtc }) => ({\r\n        connections: rtc.setting.connections,\r\n        audio: rtc.setting.audio,\r\n        video: rtc.setting.video,\r\n        resolution: rtc.setting.resolution,\r\n    }));\r\n    const dispatch = useDispatch();\r\n\r\n    const localStream=useRef();\r\n    const [foundLocal, setFoundLocal] = useState(false);\r\n    const [isOpen,setIsOpen] = useState(false);\r\n\r\n    useEffect(()=>{getMedia(resolution)},[]);\r\n\r\n    const getMedia = async (res) => {\r\n        try {\r\n            if(localStream.current.srcObject) {\r\n                console.log(\"stop track\")\r\n                localStream.current.srcObject.getTracks().forEach(track => {\r\n                    track.stop();\r\n                });\r\n            }\r\n\r\n            await navigator.mediaDevices.getUserMedia({ audio: true, video: res }).then(stream => {\r\n                localStream.current.srcObject = stream;\r\n                const track = stream.getVideoTracks()[0]\r\n                const settings = track.getSettings();\r\n                const controls = document.getElementById('await-video-container');\r\n                controls.style.width = `${settings.width}px`;\r\n                controls.style.height = `${settings.height}px`;\r\n            });\r\n            setFoundLocal(true);\r\n        } catch (e) {\r\n            console.log(\"getUserMedia error\",e)\r\n            setFoundLocal(false);\r\n        }\r\n    }\r\n\r\n\r\n    const initCall = () => {\r\n        if(localStream.current.srcObject) {\r\n            console.log(\"stop track\")\r\n            localStream.current.srcObject.getTracks().forEach(track => {\r\n                track.stop();\r\n            });\r\n            localStream.current=null;\r\n        }\r\n        history.push('./test');\r\n    }\r\n\r\n    const toggleAudio = () => {\r\n        localStream.current.srcObject.getAudioTracks()[0].enabled = !audio;\r\n        dispatch(setSettings({ connections, video, audio: !audio, resolution }));\r\n    }\r\n\r\n    const toggleVideo = () => {\r\n        localStream.current.srcObject.getVideoTracks()[0].enabled = !video;\r\n        dispatch(setSettings({ connections, audio, video: !video, resolution }));\r\n    }\r\n\r\n    const setResolution = (idx) => {\r\n        dispatch(setSettings({ connections, audio: true, video: true, resolution: videoConstraints[idx] }));\r\n        getMedia(videoConstraints[idx]);\r\n    }\r\n\r\n    return (\r\n        <Home\r\n            audio={audio}\r\n            video={video}\r\n            toggleAudio={toggleAudio}\r\n            toggleVideo={toggleVideo}\r\n            initCall={initCall}\r\n            connections={connections}\r\n            setConnections={(val)=>dispatch(setSettings({ connections: val, audio, video, resolution }))}\r\n            setResolution={setResolution}\r\n            localStream={localStream}\r\n            foundLocal={foundLocal}\r\n            history={history} \r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(HomeForm);","import React from 'react';\r\nimport HomeForm from '../containers/HomeForm';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <HomeForm />\r\n        );\r\n    }\r\n}","import Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\n\r\nconst TableUI = ({ tableHead, tableData }) => {\r\n    return (\r\n        <Table>\r\n            <TableHead>\r\n                <TableRow>\r\n                {\r\n                    tableHead.map(head => <TableCell>{head}</TableCell>)\r\n                }\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {\r\n                tableData.map(row=>\r\n                    <TableRow>\r\n                    {\r\n                        row.map(data => (\r\n                            <TableCell>\r\n                                {data}\r\n                            </TableCell>\r\n                        ))\r\n                    }\r\n                    </TableRow>\r\n                )\r\n            }\r\n            </TableBody>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default TableUI;","import Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button'\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TableUI from '../TableUI';\r\n\r\nexport default function StatsPopup({ open, messages, confirm, isSender, setIsSender }) {\r\n    const tableData={}\r\n    const ids=[]\r\n    messages[isSender===\"sender\" ? 0 : 1].forEach(report => {\r\n        let datas=[];\r\n        ids.push(report.id)\r\n        let key;\r\n        for(key in report){\r\n            datas.push([key,report[key]])\r\n        }\r\n        tableData[report.id] = datas;\r\n    });\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth\r\n            maxWidth=\"xl\"\r\n        >\r\n            <DialogContent>\r\n                <RadioGroup value={isSender} onChange={e=>{console.log('isSender',e.target.value,isSender); setIsSender(e.target.value)}}>\r\n                    <FormControlLabel value=\"sender\" label=\"Sender\" control={<Radio />} />\r\n                    <FormControlLabel value=\"receiver\" label=\"Receiver\" control={<Radio />} />\r\n                </RadioGroup>\r\n                {\r\n                    ids.map(id => (\r\n                        <details>\r\n                            <summary>{id}</summary>\r\n                            <TableUI\r\n                                tableHead={[\"parameter\", \"value\"]}\r\n                                tableData={tableData[id]}\r\n                            />\r\n                        </details>\r\n                    ))\r\n                }\r\n                \r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={confirm} color=\"primary\">\r\n                    확인\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Videocam, VideocamOff, Mic, MicOff, CallEnd, Layers, People } from \"@material-ui/icons\";\r\nimport { useStyles } from '../MuiTheme';\r\nimport StatsPopup from './popups/StatsPopup'; \r\n\r\nconst TestUI = ({\r\n    audio, video, setConnections, toggleAudio, toggleVideo, toggleView, hangup, connections, localStreamRef, statsIsOpen, openStats, closeStats, statMessages, isSender, setIsSender,\r\n}) => {\r\n    const classes = useStyles();\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <div id='my-area'>\r\n                <People />\r\n                <p> {connections}</p>\r\n                <Button onClick={()=>setConnections(connections+1)}>+</Button>\r\n                <Button onClick={()=>setConnections(connections-1)}>-</Button>\r\n                <video id=\"my-video\" ref={localStreamRef} autoPlay={true}  />\r\n            </div>\r\n            <main>\r\n                <div id=\"call-main\">\r\n                    <div id=\"call-videos\">\r\n                        {\r\n                            Array.from({ length:connections },(_,i) => \r\n                                <div key={i} className=\"remote-container\" id={`remote-container ${i}`}>\r\n                                    <video className=\"remote-video\" id={`remote-video ${i}`} onClick={()=>openStats(i)} autoPlay/>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div> \r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item/>\r\n                        <Grid item>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" className={classes.roundButton} onClick={toggleAudio}>\r\n                                        { audio ? <Mic /> : <MicOff /> }\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" className={classes.roundButton} onClick={toggleVideo}>\r\n                                        { video? <Videocam /> : <VideocamOff /> }\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" className={classes.roundButton} onClick={hangup}>\r\n                                        <CallEnd />\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" className={classes.roundButton} onClick={toggleView}>\r\n                                <Layers />\r\n                            </Button>\r\n                        </Grid>  \r\n                    </Grid>\r\n                </div>\r\n            </main>\r\n            <StatsPopup\r\n                open={statsIsOpen}\r\n                messages={statMessages}\r\n                confirm={closeStats}\r\n                isSender={isSender}\r\n                setIsSender={setIsSender}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TestUI;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Test from '../components/TestUI'\r\nimport { setSettings } from '../modules/rtc';\r\n\r\nconst TestForm = ({ history }) => {\r\n    const { connections, audio, video, resolution } = useSelector(({ rtc }) => ({\r\n        connections: rtc.setting.connections,\r\n        audio: rtc.setting.audio,\r\n        video: rtc.setting.video,\r\n        resolution: rtc.setting.resolution,\r\n    }));\r\n    const dispatch = useDispatch();\r\n\r\n    const localStream=useRef();\r\n    const RTCObjects =useRef(Array.from({ length: 100 },() => {return { pcLocal: null , pcRemote: null }}));\r\n\r\n    const remoteRefs = useRef(Array.from({ length: 100 },() => null))\r\n\r\n    const [areaWidth, setAreaWidth] = useState(0);\r\n    const [areaHeight, setAreaHeight] = useState(0);\r\n    const [view,setView] = useState('sidebar')\r\n\r\n    const [statsIsOpen, setStatsIsOpen] = useState(false);\r\n    const [statMessages, setStatMessages] = useState([[],[]]);\r\n    const [statInterval, setStatInterval] = useState(null);\r\n    const [isSender, setIsSender] = useState(\"sender\");\r\n\r\n    useEffect(() => {\r\n        resizeWindow();\r\n        window.addEventListener('resize', resizeWindow);\r\n        return () => { // cleanup \r\n          window.removeEventListener('resize', resizeWindow);\r\n        }\r\n      }, []);\r\n\r\n    useEffect(() => {\r\n        hangup(false);\r\n        init();\r\n        resizeVideos();\r\n    },[connections]);\r\n\r\n\r\n    useEffect(() => {\r\n        resizeVideos();\r\n    },[view, areaHeight, areaWidth])\r\n\r\n    const resizeWindow = () => {\r\n        const area = document.getElementById('call-videos');\r\n        setAreaWidth(area.offsetWidth);\r\n        setAreaHeight(area.offsetHeight);\r\n    }\r\n\r\n    const resizeVideos = () => {\r\n        let vid;\r\n        let vidContainer;\r\n        for(let idx=0;idx<connections;idx++) {\r\n            vid = document.getElementById(`remote-video ${idx}`);\r\n            vidContainer = document.getElementById(`remote-container ${idx}`)\r\n            if(areaWidth>areaHeight) {\r\n                vid.style.width=\"100%\";\r\n                vid.style.height=\"auto\";\r\n            } else {\r\n                vid.style.width=\"auto\";\r\n                vid.style.height=\"100%\";\r\n            }\r\n            if(view===\"sidebar\") {\r\n                vidContainer.style.display=\"block\";\r\n                vidContainer.style.position=\"absolute\";\r\n                if(idx===0){\r\n                    vidContainer.style.left=0;\r\n                    vidContainer.style.width=`${areaWidth-220}px`; \r\n                    vidContainer.style.height=\"100%\";\r\n                } else if(idx>5){\r\n                    vidContainer.style.display=\"none\";\r\n                } else {\r\n                    vidContainer.style.right=0;\r\n                    vidContainer.style.width=\"218px\";\r\n                    vidContainer.style.height=\"123px\";\r\n                    vidContainer.style.top=`${123*Math.min(idx-1,6)+64}px`\r\n                }\r\n            } else {\r\n                vidContainer.style.display=\"block\";\r\n                vidContainer.style.top=\"auto\";\r\n                vidContainer.style.left=\"auto\";\r\n                vidContainer.style.right=\"auto\";\r\n                if(idx>49){\r\n                    vidContainer.style.display=\"none\";\r\n                }\r\n                vidContainer.style.position=\"relative\";\r\n                vidContainer.style.width=`${areaWidth/Math.ceil(Math.sqrt(Math.min(connections,49)))}px`;\r\n                vidContainer.style.height=`${areaHeight/Math.ceil(Math.sqrt(Math.min(connections,49)))}px`\r\n            }\r\n        }\r\n    }\r\n\r\n    const init = async () => {\r\n        try {\r\n            await navigator.mediaDevices.getUserMedia({ audio: audio || true, video: video ? resolution : true }).then(stream => {\r\n                localStream.current.srcObject = stream;\r\n                const track = stream.getVideoTracks()[0]\r\n                const settings = track.getSettings();\r\n            });\r\n            localStream.current.srcObject.getAudioTracks()[0].enabled = audio;\r\n            localStream.current.srcObject.getVideoTracks()[0].enabled = video;\r\n            call();\r\n        } catch (e) {\r\n            console.log(\"getUserMedia error\",e)\r\n        }\r\n    }\r\n\r\n    const call = async () => {\r\n        for(let i=0; i<connections; i++) {\r\n            RTCObjects.current[i].pcLocal = new RTCPeerConnection(null);\r\n            RTCObjects.current[i].pcRemote = new RTCPeerConnection(null);\r\n\r\n            RTCObjects.current[i].pcRemote.ontrack = (event)=>gotRemoteStream(event, i);\r\n            RTCObjects.current[i].pcLocal.onicecandidate = (event)=>iceCallbackLocal(event, i);\r\n            RTCObjects.current[i].pcRemote.onicecandidate = (event)=>iceCallbackRemote(event, i);\r\n\r\n            localStream.current.srcObject.getTracks().forEach(track => RTCObjects.current[i].pcLocal.addTrack(track, localStream.current.srcObject));\r\n\r\n            RTCObjects.current[i].pcLocal\r\n                .createOffer({ offerToReceiveAudio: 1, offerToReceiveVideo: 1 })\r\n                .then((event)=>gotDescriptionLocal(event,i), onCreateSessionDescriptionError);\r\n        }\r\n    }\r\n\r\n    function onCreateSessionDescriptionError(error) {\r\n        console.log(`Failed to create session description: ${error.toString()}`);\r\n    }\r\n    \r\n    function gotDescriptionLocal(desc, idx) {\r\n        RTCObjects.current[idx].pcLocal.setLocalDescription(desc);\r\n        // console.log(`Offer from pc${idx}Local\\n${desc.sdp}`);\r\n        RTCObjects.current[idx].pcRemote.setRemoteDescription(desc);\r\n        // Since the 'remote' side has no media stream we need\r\n        // to pass in the right constraints in order for it to\r\n        // accept the incoming offer of audio and video.\r\n        RTCObjects.current[idx].pcRemote.createAnswer().then((event)=>gotDescriptionRemote(event, idx), onCreateSessionDescriptionError);\r\n    }\r\n      \r\n    function gotDescriptionRemote(desc, idx) {\r\n        RTCObjects.current[idx].pcRemote.setLocalDescription(desc);\r\n        // console.log(`Answer from pc${idx}Remote\\n${desc.sdp}`);\r\n        RTCObjects.current[idx].pcLocal.setRemoteDescription(desc);\r\n    }\r\n\r\n    function gotRemoteStream(e, idx) {\r\n        if (remoteRefs.current[idx] !== e.streams[0]) {\r\n            remoteRefs.current[idx] = e.streams[0];\r\n            const vid = document.getElementById(`remote-video ${idx}`);\r\n            if(vid) { vid.srcObject = remoteRefs.current[idx] }\r\n            console.log(`pc${idx}: received remote stream`);\r\n        } else {\r\n            console.log(\"test failed!\")\r\n        }\r\n    }\r\n\r\n    function iceCallbackLocal(event, idx) {\r\n        handleCandidate(event.candidate, RTCObjects.current[idx].pcRemote, `pc${idx}: `, 'local');\r\n    }\r\n      \r\n    function iceCallbackRemote(event, idx) {\r\n        handleCandidate(event.candidate, RTCObjects.current[idx].pcLocal, `pc${idx}: `, 'remote');\r\n    }\r\n      \r\n    function handleCandidate(candidate, dest, prefix, type) {\r\n        dest.addIceCandidate(candidate)\r\n            // .then(onAddIceCandidateSuccess, onAddIceCandidateError);\r\n        //console.log(`${prefix}New ${type} ICE candidate: ${candidate ? candidate.candidate : '(null)'}`);\r\n    }\r\n      \r\n    // function onAddIceCandidateSuccess() {\r\n    //     console.log('AddIceCandidate success.');\r\n    // }\r\n      \r\n    // function onAddIceCandidateError(error) {\r\n    //     console.log(`Failed to add ICE candidate: ${error.toString()}`);\r\n    // }\r\n\r\n    function hangup(shouldLeave) {\r\n        for(let i=0;i<connections;i++) {\r\n            if(RTCObjects.current[i].pcLocal)\r\n                RTCObjects.current[i].pcLocal.close();\r\n            if(RTCObjects.current[i].pcRemote)\r\n                RTCObjects.current[i].pcRemote.close();\r\n            RTCObjects.current[i].pcLocal = null;\r\n            RTCObjects.current[i].pcRemote = null;\r\n        }\r\n        if(shouldLeave) {\r\n            if(localStream.current.srcObject) {\r\n                localStream.current.srcObject.getTracks().forEach(track => {\r\n                    track.stop();\r\n                });\r\n                localStream.current=null;\r\n            }\r\n            dispatch(setSettings({ connections, audio: true, video: true, resolution }));\r\n            history.push('/')\r\n        } \r\n    }\r\n\r\n    const toggleAudio = () => {\r\n        localStream.current.srcObject.getAudioTracks()[0].enabled = !audio;\r\n        dispatch(setSettings({ connections, video, audio: !audio, resolution }));\r\n    }\r\n\r\n    const toggleVideo = () => {\r\n        localStream.current.srcObject.getVideoTracks()[0].enabled = !video;\r\n        dispatch(setSettings({ connections, audio, video: !video, resolution }));\r\n    }\r\n\r\n    const toggleView = () => {\r\n        if(view === \"sidebar\"){\r\n            setView(\"tiles\")\r\n        } else {\r\n            setView(\"sidebar\")\r\n        }\r\n    }\r\n\r\n    const openStats = (idx) => {\r\n        if(statInterval) {\r\n            clearInterval(statInterval);\r\n        }\r\n        const interval = setInterval(async ()=>{\r\n            let messages=['',''];\r\n            if(RTCObjects.current[idx] && RTCObjects.current[idx].pcLocal){\r\n                const localStat = await RTCObjects.current[idx].pcLocal.getStats(null).then(\r\n                    results=>results, err => err.toString()\r\n                )\r\n                messages[0] = localStat;\r\n            }\r\n            if(RTCObjects.current[idx] && RTCObjects.current[idx].pcRemote){\r\n                const remoteStat = await RTCObjects.current[idx].pcRemote.getStats(null).then(\r\n                    results=>results, err => err.toString()\r\n                )\r\n                messages[1] = remoteStat;\r\n            }\r\n            setStatMessages(messages);\r\n        },1000);\r\n        setStatInterval(interval);\r\n        setStatsIsOpen(true);\r\n    }\r\n\r\n    const closeStats = () => {\r\n        clearInterval(statInterval);\r\n        setStatsIsOpen(false);\r\n        setStatInterval(null);\r\n    }\r\n\r\n    return(\r\n        <Test\r\n            audio={audio}\r\n            video={video}\r\n            setConnections={(val)=>dispatch(setSettings({ connections: val, audio, video, resolution }))}\r\n            toggleAudio={toggleAudio}\r\n            toggleVideo={toggleVideo}\r\n            toggleView={toggleView}\r\n            hangup={()=>hangup(true)}\r\n            connections={connections}\r\n            localStreamRef={localStream}\r\n            remoteStreamRefs={remoteRefs}\r\n            statsIsOpen={statsIsOpen}\r\n            openStats={(idx)=>openStats(idx)}\r\n            closeStats={closeStats}\r\n            statMessages={statMessages}\r\n            isSender={isSender}\r\n            setIsSender={setIsSender}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withRouter(TestForm);","import React from 'react';\r\nimport TestForm from '../containers/TestForm';\r\n\r\nexport default class Test extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <TestForm />\r\n        );\r\n    }\r\n}","import { BrowserRouter, Route} from 'react-router-dom'\r\nimport { Home, Test } from './pages';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\r\n      <Route exact path=\"/\" component={Home}/>\r\n      <Route exact path=\"/test\" component={Test}/>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport rtc from './rtc';\r\n\r\n\r\nconst appReducer = combineReducers({\r\n  rtc,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './modules';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n  rootReducer, composeWithDevTools()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}