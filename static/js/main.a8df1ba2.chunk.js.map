{"version":3,"sources":["components/popups/TextInputPopup.js","MuiTheme.js","components/HomeUI.js","modules/rtc.js","lib/constraints.js","containers/HomeForm.js","pages/Home.js","components/TableUI.js","components/popups/StatsPopup.js","components/TestUI.js","containers/TestForm.js","pages/Test.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["TextfieldPopup","open","message","label","setText","value","cancel","submit","Dialog","DialogContent","DialogContentText","type","onChange","e","val","Number","target","inputProps","min","max","DialogActions","Button","onClick","color","useStyles","createMuiTheme","overrides","MuiGrid","container","height","palette","primary","main","secondary","makeStyles","roundButton","borderRadius","width","HomeUI","connections","setConnections","setResolution","setRoom","audio","video","room","toggleAudio","toggleVideo","initCall","localStream","isOpen","setIsOpen","classes","Fragment","Grid","id","spacing","item","ref","autoPlay","variant","className","Mic","MicOff","Videocam","VideocamOff","awaitControls","direction","alignItems","TextField","disabled","SET_SETTINGS","setSettings","createAction","settings","rtc","handleActions","state","setting","payload","resolution","exact","videoConstraints","withRouter","history","useSelector","dispatch","useDispatch","useRef","useState","useEffect","getMedia","res","a","current","srcObject","console","log","getTracks","forEach","track","stop","navigator","mediaDevices","getUserMedia","then","stream","getVideoTracks","getSettings","controls","document","getElementById","style","getAudioTracks","enabled","isHost","push","idx","Home","React","Component","TableUI","tableHead","tableData","Table","TableHead","TableRow","map","head","TableCell","TableBody","row","data","StatsPopup","messages","confirm","ids","report","key","datas","fullWidth","maxWidth","TestUI","toggleView","hangup","localStreamRef","statsIsOpen","openStats","closeStats","statMessages","People","Array","from","length","_","i","justify","CallEnd","Layers","location","RTCObjects","socket","setSocket","remoteRefs","areaWidth","setAreaWidth","areaHeight","setAreaHeight","view","setView","setStatsIsOpen","setStatMessages","statInterval","setStatInterval","resizeWindow","window","addEventListener","init","io","removeEventListener","resizeVideos","configSocket","area","offsetWidth","offsetHeight","vid","vidContainer","display","position","left","right","top","Math","ceil","sqrt","emit","on","signalData","setRemoteDescription","candidate","addIceCandidate","acceptCall","closeRTC","once","enter","alert","disconnect","error","RTCPeerConnection","config","iceServers","urls","credential","username","onicecandidate","event","iceCallbackLocal","addTrack","createOffer","offerToReceiveAudio","offerToReceiveVideo","onCreateOffer","onCreateSessionDescriptionError","ontrack","gotRemoteStream","remoteSignal","iceCallbackRemote","createAnswer","onCreateAnswer","toString","desc","setLocalDescription","streams","close","shouldLeave","adjustConnection","remoteStreamRefs","clearInterval","interval","setInterval","getStats","results","err","stats","Test","App","basename","process","hashType","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","appReducer","combineReducers","rootReducer","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a8df1ba2.chunk.js","sourcesContent":["import Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button'\r\nimport Textfield from '@material-ui/core/Textfield';\r\n\r\nexport default function TextfieldPopup({ open, message, label, setText, value, cancel, submit }) {\r\n    const handleInput = (e) => {\r\n        let val = Number(e.target.value);\r\n        if(val>100) {\r\n            val=100;\r\n        }\r\n        if(val<1) {\r\n            val=1;\r\n        }\r\n        setText(val);\r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n        >\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {message}\r\n                </DialogContentText>\r\n                <Textfield\r\n                    label={label}\r\n                    type=\"number\"\r\n                    onChange={handleInput}\r\n                    inputProps={{min:1,max:100}}\r\n                    value={value}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={cancel} color=\"primary\">\r\n                    취소\r\n                </Button>\r\n                <Button onClick={submit} color=\"primary\">\r\n                    입력\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import { createMuiTheme } from '@material-ui/core/styles'\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst themePalete = createMuiTheme({\r\n  overrides: {\r\n    MuiGrid: {\r\n      container: {\r\n        height: \"100%\"\r\n      }\r\n    }\r\n  },\r\n  palette: {\r\n    primary: { main: \"#38BF87\" },\r\n    secondary: { main: \"#ff1a1a\" },\r\n  }\r\n})\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    roundButton: {\r\n        borderRadius: \"50%\",\r\n        width: \"60px\",\r\n        height: \"60px\",\r\n    }\r\n}));\r\n\r\nexport default themePalete;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Videocam, VideocamOff, Mic, MicOff } from '@material-ui/icons';\r\nimport TextInputPopup from './popups/TextInputPopup';\r\nimport { useStyles } from '../MuiTheme';\r\n\r\nconst HomeUI = ({\r\n    connections, setConnections, setResolution, setRoom, audio, video, room, toggleAudio, toggleVideo, initCall, localStream, isOpen, setIsOpen \r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <main>\r\n                <Grid container id=\"await-main\" spacing={10}>\r\n                    <Grid item>\r\n                        <div id=\"await-video-container\">\r\n                            <video id=\"await-video\" ref={localStream} autoPlay/>\r\n                            <div id='await-video-controls'>\r\n                                <Button variant=\"contained\" className={classes.roundButton} onClick={toggleAudio}>\r\n                                    { audio ? <Mic /> : <MicOff /> }\r\n                                </Button>\r\n                                <Button variant=\"contained\" className={classes.roundButton} onClick={toggleVideo}>\r\n                                    { video? <Videocam /> : <VideocamOff /> }\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item className={classes.awaitControls}>\r\n                        <Grid container direction=\"column\" spacing={1} alignItems=\"center\">\r\n                            <Grid item>\r\n                                <div id=\"await-resoultion-controls\">\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(0)}>qvga</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(1)}>vga</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(2)}>HD</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(3)}>fullHD</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(4)}>TV4k</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(5)}>cinema4K</Button>\r\n                                    <Button variant=\"contained\" onClick={()=>setResolution(5)}>8K</Button>\r\n                                </div> \r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField label=\"채팅방 id\" value={room} onChange={(e)=>setRoom(e.target.value)}/>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container spacing={1}>\r\n                                    <Grid item>\r\n                                        <Button disabled={!room} variant=\"contained\" onClick={()=>setIsOpen(true)}>\r\n                                            신규 방 생성\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button disabled={!room} variant=\"contained\" onClick={()=>initCall(false)}>\r\n                                            기존 방 입장\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </main>\r\n            <TextInputPopup\r\n                open={isOpen}\r\n                message=\"Peer 수 입력\"\r\n                label=\"peer\"\r\n                setText={setConnections}\r\n                value={connections}\r\n                cancel={()=>setIsOpen(false)}\r\n                submit={()=>{\r\n                    setIsOpen(false)\r\n                    initCall(true)}\r\n                }\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default HomeUI;","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst SET_SETTINGS = \"rtc/SET_SETTINGS\";\r\n\r\nconst initialState = {\r\n    setting: {\r\n        connections: 1,\r\n        audio: true,\r\n        video: true,\r\n        resolution: {width: {exact: 320}, height: {exact: 240}},\r\n        room: '',\r\n    },\r\n}\r\n\r\nexport const setSettings = createAction(SET_SETTINGS, settings => settings);\r\n\r\nconst rtc = handleActions(\r\n    {\r\n        [SET_SETTINGS]: (state, { payload: setting })=>({\r\n            ...state,\r\n            setting,\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default rtc;","const qvgaConstraints = { width: {exact: 320}, height: {exact: 240} };\r\n\r\nconst vgaConstraints = { width: {exact: 640}, height: {exact: 480} };\r\n\r\nconst hdConstraints =  { width: {exact: 1280}, height: {exact: 720} };\r\n\r\nconst fullHdConstraints = { width: {exact: 1920}, height: {exact: 1080} };\r\n\r\nconst televisionFourKConstraints = { width: {exact: 3840}, height: {exact: 2160} };\r\n\r\nconst cinemaFourKConstraints = { width: {exact: 4096}, height: {exact: 2160} };\r\n\r\nconst eightKConstraints = { width: {exact: 7680}, height: {exact: 4320} };\r\n\r\nexport const videoConstraints = [qvgaConstraints, vgaConstraints, hdConstraints, fullHdConstraints, televisionFourKConstraints, cinemaFourKConstraints, eightKConstraints]\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Home from '../components/HomeUI'\r\nimport { setSettings } from '../modules/rtc';\r\nimport {videoConstraints } from '../lib/constraints';\r\n\r\nconst HomeForm = ({ history }) => {\r\n    const { connections, audio, video, resolution, room } = useSelector(({ rtc }) => ({\r\n        connections: rtc.setting.connections,\r\n        audio: rtc.setting.audio,\r\n        video: rtc.setting.video,\r\n        resolution: rtc.setting.resolution,\r\n        room: rtc.setting.room,\r\n    }));\r\n    const dispatch = useDispatch();\r\n\r\n    const localStream=useRef();\r\n    const [isOpen,setIsOpen] = useState(false);\r\n\r\n    useEffect(()=>{getMedia(resolution)},[]);\r\n\r\n    const getMedia = async (res) => {\r\n        try {\r\n            if(localStream.current.srcObject) {\r\n                console.log(\"stop track\")\r\n                localStream.current.srcObject.getTracks().forEach(track => {\r\n                    track.stop();\r\n                });\r\n            }\r\n\r\n            await navigator.mediaDevices.getUserMedia({ audio: true, video: res }).then(stream => {\r\n                localStream.current.srcObject = stream;\r\n                const track = stream.getVideoTracks()[0]\r\n                const settings = track.getSettings();\r\n                const controls = document.getElementById('await-video-container');\r\n                controls.style.width = `${settings.width}px`;\r\n                controls.style.height = `${settings.height}px`;\r\n            });\r\n        } catch (e) {\r\n            console.log(\"getUserMedia error\",e)\r\n        }\r\n    }\r\n\r\n\r\n    const initCall = (isHost) => {\r\n        if(localStream.current.srcObject) {\r\n            console.log(\"stop track\")\r\n            localStream.current.srcObject.getTracks().forEach(track => {\r\n                track.stop();\r\n            });\r\n            dispatch(setSettings({ connections, video, audio, resolution, room }));\r\n            localStream.current=null;\r\n        }\r\n        history.push('./test',{isHost});\r\n    }\r\n\r\n    const toggleAudio = () => {\r\n        localStream.current.srcObject.getAudioTracks()[0].enabled = !audio;\r\n        dispatch(setSettings({ connections, video, audio: !audio, resolution, room }));\r\n    }\r\n\r\n    const toggleVideo = () => {\r\n        localStream.current.srcObject.getVideoTracks()[0].enabled = !video;\r\n        dispatch(setSettings({ connections, audio, video: !video, resolution, room }));\r\n    }\r\n\r\n    const setResolution = (idx) => {\r\n        dispatch(setSettings({ connections, audio: true, video: true, resolution: videoConstraints[idx], room }));\r\n        getMedia(videoConstraints[idx]);\r\n    }\r\n\r\n    return (\r\n        <Home\r\n            audio={audio}\r\n            video={video}\r\n            room={room}\r\n            toggleAudio={toggleAudio}\r\n            toggleVideo={toggleVideo}\r\n            initCall={initCall}\r\n            connections={connections}\r\n            setConnections={(val)=>dispatch(setSettings({ connections: val, audio, video, resolution, room }))}\r\n            setResolution={setResolution}\r\n            setRoom={(val)=>dispatch(setSettings({ connections, audio, video, resolution, room: val }))}\r\n            localStream={localStream}\r\n            history={history} \r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(HomeForm);","import React from 'react';\r\nimport HomeForm from '../containers/HomeForm';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <HomeForm />\r\n        );\r\n    }\r\n}","import Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\n\r\nconst TableUI = ({ tableHead, tableData }) => {\r\n    return (\r\n        <Table>\r\n            <TableHead>\r\n                <TableRow>\r\n                {\r\n                    tableHead.map(head => <TableCell>{head}</TableCell>)\r\n                }\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {\r\n                tableData.map(row=>\r\n                    <TableRow>\r\n                    {\r\n                        row.map(data => (\r\n                            <TableCell>\r\n                                {data}\r\n                            </TableCell>\r\n                        ))\r\n                    }\r\n                    </TableRow>\r\n                )\r\n            }\r\n            </TableBody>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default TableUI;","import Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button'\r\nimport TableUI from '../TableUI';\r\n\r\nexport default function StatsPopup({ open, messages, confirm }) {\r\n    const tableData={}\r\n    const ids=[]\r\n    messages.forEach(report => {\r\n        let datas=[];\r\n        ids.push(report.id)\r\n        let key;\r\n        for(key in report){\r\n            datas.push([key,report[key]])\r\n        }\r\n        tableData[report.id] = datas;\r\n    });\r\n\r\n    return(\r\n        <Dialog\r\n            open={open}\r\n            fullWidth\r\n            maxWidth=\"xl\"\r\n        >\r\n            <DialogContent>\r\n                {\r\n                    ids.map(id => (\r\n                        <details>\r\n                            <summary>{id}</summary>\r\n                            <TableUI\r\n                                tableHead={[\"parameter\", \"value\"]}\r\n                                tableData={tableData[id]}\r\n                            />\r\n                        </details>\r\n                    ))\r\n                }\r\n                \r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={confirm} color=\"primary\">\r\n                    확인\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Videocam, VideocamOff, Mic, MicOff, CallEnd, Layers, People } from \"@material-ui/icons\";\r\nimport { useStyles } from '../MuiTheme';\r\nimport StatsPopup from './popups/StatsPopup'; \r\n\r\nconst TestUI = ({\r\n    audio, video, isHost, setConnections, toggleAudio, toggleVideo, toggleView, hangup, connections, localStreamRef, statsIsOpen, openStats, closeStats, statMessages,\r\n}) => {\r\n    const classes = useStyles();\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <div id='my-area'>\r\n                <People />\r\n                <p> {connections}</p>\r\n                <Button disabled={!isHost} onClick={()=>setConnections(connections+1)}>+</Button>\r\n                <Button disabled={!isHost} onClick={()=>setConnections(connections-1)}>-</Button>\r\n                <video id=\"my-video\" ref={localStreamRef} autoPlay={true}  />\r\n            </div>\r\n            <main>\r\n                <div id=\"call-main\">\r\n                    <div id=\"call-videos\">\r\n                        {\r\n                            Array.from({ length:connections },(_,i) => \r\n                                <div key={i} className=\"remote-container\" id={`remote-container ${i}`}>\r\n                                    <video className=\"remote-video\" id={`remote-video ${i}`} onClick={()=>openStats(i)} autoPlay/>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div> \r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item/>\r\n                        <Grid item>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" className={classes.roundButton} onClick={toggleAudio}>\r\n                                        { audio ? <Mic /> : <MicOff /> }\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" className={classes.roundButton} onClick={toggleVideo}>\r\n                                        { video? <Videocam /> : <VideocamOff /> }\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" className={classes.roundButton} onClick={hangup}>\r\n                                        <CallEnd />\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" className={classes.roundButton} onClick={toggleView}>\r\n                                <Layers />\r\n                            </Button>\r\n                        </Grid>  \r\n                    </Grid>\r\n                </div>\r\n            </main>\r\n            <StatsPopup\r\n                open={statsIsOpen}\r\n                messages={statMessages}\r\n                confirm={closeStats}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TestUI;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport io from \"socket.io-client\";\r\nimport Test from '../components/TestUI'\r\nimport { setSettings } from '../modules/rtc';\r\n\r\nconst TestForm = ({ history }) => {\r\n    const { connections, audio, video, resolution, room } = useSelector(({ rtc }) => ({\r\n        connections: rtc.setting.connections,\r\n        audio: rtc.setting.audio,\r\n        video: rtc.setting.video,\r\n        resolution: rtc.setting.resolution,\r\n        room: rtc.setting.room,\r\n    }));\r\n\r\n    const isHost = history.location.state && history.location.state.isHost;\r\n    const dispatch = useDispatch();\r\n\r\n    const localStream=useRef();\r\n    const RTCObjects =useRef(Array.from({ length: 100 },() => null));\r\n\r\n    const [socket, setSocket] = useState(null);\r\n\r\n    const remoteRefs = useRef(Array.from({ length: 100 },() => null))\r\n\r\n    const [areaWidth, setAreaWidth] = useState(0);\r\n    const [areaHeight, setAreaHeight] = useState(0);\r\n    const [view,setView] = useState('sidebar')\r\n\r\n    const [statsIsOpen, setStatsIsOpen] = useState(false);\r\n    const [statMessages, setStatMessages] = useState([[],[]]);\r\n    const [statInterval, setStatInterval] = useState(null);\r\n\r\n    useEffect(() => {\r\n        resizeWindow();\r\n        window.addEventListener('resize', resizeWindow);\r\n        init();\r\n        setSocket(io(\"https://rtc-test-app.herokuapp.com/\"));\r\n        return () => {\r\n            window.removeEventListener('resize', resizeWindow);\r\n        }\r\n      }, []);\r\n\r\n    useEffect(() => {\r\n        resizeVideos();\r\n    },[connections]);\r\n\r\n    useEffect(() => {\r\n        if(socket)\r\n        {\r\n            configSocket(room)\r\n        }\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        resizeVideos();\r\n    },[view, areaHeight, areaWidth])\r\n\r\n    const resizeWindow = () => {\r\n        const area = document.getElementById('call-videos');\r\n        setAreaWidth(area.offsetWidth);\r\n        setAreaHeight(area.offsetHeight);\r\n    }\r\n\r\n    const resizeVideos = () => {\r\n        let vid;\r\n        let vidContainer;\r\n        for(let idx=0;idx<connections;idx++) {\r\n            vid = document.getElementById(`remote-video ${idx}`);\r\n            vidContainer = document.getElementById(`remote-container ${idx}`)\r\n            if(areaWidth>areaHeight) {\r\n                vid.style.width=\"100%\";\r\n                vid.style.height=\"auto\";\r\n            } else {\r\n                vid.style.width=\"auto\";\r\n                vid.style.height=\"100%\";\r\n            }\r\n            if(view===\"sidebar\") {\r\n                vidContainer.style.display=\"block\";\r\n                vidContainer.style.position=\"absolute\";\r\n                if(idx===0){\r\n                    vidContainer.style.left=0;\r\n                    vidContainer.style.width=`${areaWidth-220}px`; \r\n                    vidContainer.style.height=\"100%\";\r\n                } else if(idx>5){\r\n                    vidContainer.style.display=\"none\";\r\n                } else {\r\n                    vidContainer.style.right=0;\r\n                    vidContainer.style.width=\"218px\";\r\n                    vidContainer.style.height=\"123px\";\r\n                    vidContainer.style.top=`${123*Math.min(idx-1,6)+64}px`\r\n                }\r\n            } else {\r\n                vidContainer.style.display=\"block\";\r\n                vidContainer.style.top=\"auto\";\r\n                vidContainer.style.left=\"auto\";\r\n                vidContainer.style.right=\"auto\";\r\n                if(idx>49){\r\n                    vidContainer.style.display=\"none\";\r\n                }\r\n                vidContainer.style.position=\"relative\";\r\n                vidContainer.style.width=`${areaWidth/Math.ceil(Math.sqrt(Math.min(connections,49)))}px`;\r\n                vidContainer.style.height=`${areaHeight/Math.ceil(Math.sqrt(Math.min(connections,49)))}px`\r\n            }\r\n        }\r\n    }\r\n\r\n    const init = async () => {\r\n        try {\r\n            await navigator.mediaDevices.getUserMedia({ audio: audio || true, video: video ? resolution : true }).then(stream => {\r\n                localStream.current.srcObject = stream;\r\n            });\r\n            localStream.current.srcObject.getAudioTracks()[0].enabled = audio;\r\n            localStream.current.srcObject.getVideoTracks()[0].enabled = video;\r\n        } catch (e) {\r\n            console.log(\"getUserMedia error\",e)\r\n        }\r\n    }\r\n\r\n\r\n    const configSocket = (room) => {\r\n        try{\r\n            socket.emit(\"enterRoom\", room, isHost);\r\n            socket.on(\"joined\",()=>{\r\n                socket.emit(\"connections-adjusted\", room, connections);\r\n                for(let i=0; i<connections; i++) {\r\n                    initCall(i);\r\n                }\r\n                socket.on(\"signal-to-caller\", data => {\r\n                    if(data.signalData.type === \"answer\") {\r\n                        RTCObjects.current[data.idx].setRemoteDescription(data.signalData);\r\n                        console.log(\"caller received answer\", data)\r\n                    } else if (data.signalData.candidate) {\r\n                        RTCObjects.current[data.idx].addIceCandidate(data.signalData);\r\n                        console.log(\"caller received candidate\", data)\r\n                    } \r\n                });\r\n            });\r\n            socket.on(\"offer-to-callee\", (data) => {\r\n                console.log(\"callee received offer\", data)\r\n                acceptCall(data.signalData, data.idx);\r\n            });\r\n            socket.on(\"adjust-connections\",(connections)=>dispatch(setSettings({ connections, audio, video, resolution, room })));\r\n            socket.on(\"candidate-to-callee\", (data) => {\r\n                console.log(\"callee received candidate\", data)\r\n                RTCObjects.current[data.idx].addIceCandidate(data.signalData);\r\n            });\r\n            socket.on(\"close\",i => closeRTC(i));\r\n            socket.on(\"end\",()=>{\r\n                hangup(false);\r\n            });\r\n            socket.once(\"joinResult\",(enter, message)=>{\r\n                if(!enter){\r\n                    alert(message);\r\n                    if(localStream.current && localStream.current.srcObject) {\r\n                        localStream.current.srcObject.getTracks().forEach(track => {\r\n                            track.stop();\r\n                        });\r\n                        localStream.current=null;\r\n                    }\r\n                    socket.disconnect();\r\n                    dispatch(setSettings({ connections, audio: true, video: true, resolution, room: '' }));\r\n                    history.push('/')\r\n                }\r\n            });\r\n        } catch(error){\r\n            console.log(\"room enter error\", error);\r\n        }\r\n    }\r\n\r\n    const initCall = async (i) => {\r\n        RTCObjects.current[i] = new RTCPeerConnection({\r\n            config: {\r\n                iceServers: [{urls: ['turn:10.186.117.86:3478?transport=udp'], credential: '1234', username: 'test'}],\r\n            },\r\n        });\r\n        RTCObjects.current[i].onicecandidate = (event)=>iceCallbackLocal(event, i);\r\n        if(localStream.current && localStream.current.srcObject) {\r\n            localStream.current.srcObject.getTracks().forEach(track => RTCObjects.current[i].addTrack(track, localStream.current.srcObject));\r\n        }\r\n        RTCObjects.current[i]\r\n            .createOffer({ offerToReceiveAudio: 1, offerToReceiveVideo: 1 })\r\n            .then((event)=>onCreateOffer(event,i), onCreateSessionDescriptionError);\r\n\r\n        RTCObjects.current[i].ontrack = (event)=>gotRemoteStream(event, i);\r\n    }\r\n\r\n    const acceptCall = async (remoteSignal, i) => {\r\n        RTCObjects.current[i] = new RTCPeerConnection({\r\n            config: {\r\n                iceServers: [{urls: ['turn:10.186.117.86:3478?transport=udp'], credential: '1234', username: 'test'}],\r\n            },\r\n        });\r\n        RTCObjects.current[i].onicecandidate = (event)=>iceCallbackRemote(event, i);\r\n        if(localStream.current && localStream.current.srcObject) {\r\n            localStream.current.srcObject.getTracks().forEach(track => RTCObjects.current[i].addTrack(track, localStream.current.srcObject));\r\n        }\r\n        \r\n        RTCObjects.current[i].setRemoteDescription(remoteSignal);\r\n\r\n        RTCObjects.current[i].createAnswer().then((event)=>onCreateAnswer(event, i), onCreateSessionDescriptionError);\r\n        RTCObjects.current[i].ontrack = (event)=>gotRemoteStream(event, i);\r\n    }\r\n\r\n    function onCreateSessionDescriptionError(error) {\r\n        console.log(`Failed to create session description: ${error.toString()}`);\r\n    }\r\n    \r\n    function onCreateOffer(desc, idx) {\r\n        RTCObjects.current[idx].setLocalDescription(desc);\r\n        socket.emit(\"caller-to-server\", { room, signalData: desc, idx, connections });\r\n        console.log('create offer', desc);\r\n    }\r\n      \r\n    function onCreateAnswer(desc, idx) {\r\n        console.log('create answer');\r\n        RTCObjects.current[idx].setLocalDescription(desc);\r\n        socket.emit(\"callee-to-server\", { room, signalData: desc, idx });\r\n    }\r\n\r\n    function gotRemoteStream(e, idx) {\r\n        if (remoteRefs.current[idx] !== e.streams[0]) {\r\n            remoteRefs.current[idx] = e.streams[0];\r\n            const vid = document.getElementById(`remote-video ${idx}`);\r\n            if(vid) {\r\n                vid.srcObject = remoteRefs.current[idx];\r\n                console.log(`pc${idx}: set remote stream as srcObject`);\r\n            } else {\r\n                console.log(`pc${idx}: set fail remote stream`, vid);\r\n            }\r\n        } else {\r\n            console.log(`pc${idx}: failed to receive remote stream`)\r\n        }\r\n    }\r\n\r\n    function iceCallbackLocal(event, idx) {\r\n        socket.emit(\"caller-to-server\", { room, signalData: event.candidate, idx });\r\n    }\r\n      \r\n    function iceCallbackRemote(event, idx) {\r\n        socket.emit(\"callee-to-server\", { room, signalData: event.candidate, idx });\r\n    }\r\n\r\n    const closeRTC = (i) => {\r\n        if(RTCObjects.current[i]) {\r\n            RTCObjects.current[i].close();\r\n            RTCObjects.current[i] = null;\r\n        }\r\n        if(isHost) {\r\n            socket.emit(\"close\",room,i);\r\n        }\r\n    }\r\n\r\n    const hangup = (shouldLeave) => {\r\n        for(let i=0;i<connections;i++) {\r\n            closeRTC(i);\r\n        }\r\n        if(shouldLeave) {\r\n            if(localStream.current && localStream.current.srcObject) {\r\n                localStream.current.srcObject.getTracks().forEach(track => {\r\n                    track.stop();\r\n                });\r\n                localStream.current=null;\r\n            }\r\n            if(socket) {\r\n                console.log(\"should disconnect socket\")\r\n                socket.emit(\"leaveRoom\", room);\r\n            }\r\n            dispatch(setSettings({ connections, audio: true, video: true, resolution, room: '' }));\r\n            history.push('/')\r\n        } \r\n    }\r\n\r\n    const adjustConnection = (val) => {\r\n        socket.emit(\"connections-adjusted\",room,val);\r\n        if(val>connections) {\r\n            for(let i=connections;i<val;i++) {\r\n                initCall(i);\r\n            }\r\n        } else {\r\n            for(let i=val;i<connections;i++) {\r\n                closeRTC(i);\r\n            }\r\n        }\r\n        dispatch(setSettings({ connections: val, audio, video, resolution, room }));\r\n    }\r\n\r\n    const toggleAudio = () => {\r\n        if(localStream.current.srcObject) {\r\n            localStream.current.srcObject.getAudioTracks()[0].enabled = !audio;\r\n            dispatch(setSettings({ connections, video, audio: !audio, resolution, room }));\r\n        }\r\n    }\r\n\r\n    const toggleVideo = () => {\r\n        if(localStream.current.srcObject) {\r\n            localStream.current.srcObject.getVideoTracks()[0].enabled = !video;\r\n            dispatch(setSettings({ connections, audio, video: !video, resolution, room }));\r\n        }\r\n    }\r\n\r\n    const toggleView = () => {\r\n        if(view === \"sidebar\"){\r\n            setView(\"tiles\")\r\n        } else {\r\n            setView(\"sidebar\")\r\n        }\r\n    }\r\n\r\n    const openStats = (idx) => {\r\n        if(statInterval) {\r\n            clearInterval(statInterval);\r\n        }\r\n        const interval = setInterval(async ()=>{\r\n            let messages;\r\n            if(RTCObjects.current[idx]){\r\n                const stats = await RTCObjects.current[idx].getStats(null).then(\r\n                    results=>results, err => err.toString()\r\n                )\r\n                messages = stats;\r\n            }\r\n            setStatMessages(messages);\r\n        },1000);\r\n        setStatInterval(interval);\r\n        setStatsIsOpen(true);\r\n    }\r\n\r\n    const closeStats = () => {\r\n        clearInterval(statInterval);\r\n        setStatsIsOpen(false);\r\n        setStatInterval(null);\r\n    }\r\n\r\n    return(\r\n        <Test\r\n            audio={audio}\r\n            video={video}\r\n            isHost={isHost}\r\n            setConnections={(val)=>adjustConnection(val)}\r\n            toggleAudio={toggleAudio}\r\n            toggleVideo={toggleVideo}\r\n            toggleView={toggleView}\r\n            hangup={()=>hangup(true)}\r\n            connections={connections}\r\n            localStreamRef={localStream}\r\n            remoteStreamRefs={remoteRefs}\r\n            statsIsOpen={statsIsOpen}\r\n            openStats={(idx)=>openStats(idx)}\r\n            closeStats={closeStats}\r\n            statMessages={statMessages}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withRouter(TestForm);","import React from 'react';\r\nimport TestForm from '../containers/TestForm';\r\n\r\nexport default class Test extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <TestForm />\r\n        );\r\n    }\r\n}","import { BrowserRouter, Route} from 'react-router-dom'\r\nimport { Home, Test } from './pages';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL} hashType=\"noslash\">\r\n      <Route exact path=\"/\" component={Home}/>\r\n      <Route exact path=\"/test\" component={Test}/>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport rtc from './rtc';\r\n\r\n\r\nconst appReducer = combineReducers({\r\n  rtc,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './modules';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n  rootReducer, composeWithDevTools()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}